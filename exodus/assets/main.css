@import url("https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i");
@import url("../../../use.typekit.net/vli5gyn.css");
a,
abbr,
acronym,
address,
applet,
article,
aside,
audio,
b,
big,
blockquote,
body,
canvas,
caption,
center,
cite,
code,
dd,
del,
details,
dfn,
div,
dl,
dt,
em,
embed,
fieldset,
figcaption,
figure,
footer,
form,
h1,
h2,
h3,
h4,
h5,
h6,
header,
hgroup,
html,
i,
iframe,
img,
ins,
kbd,
label,
legend,
li,
mark,
menu,
nav,
object,
ol,
output,
p,
pre,
q,
ruby,
s,
samp,
section,
small,
span,
strike,
strong,
sub,
summary,
sup,
table,
tbody,
td,
tfoot,
th,
thead,
time,
tr,
tt,
u,
ul,
var,
video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    vertical-align: baseline;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
    display: block;
}
body {
    line-height: 1;
}
ol,
ul {
    list-style: none;
}
blockquote,
q {
    quotes: none;
}
blockquote:after,
blockquote:before,
q:after,
q:before {
    content: "";
    content: none;
}
table {
    border-collapse: collapse;
    border-spacing: 0;
}
.h1,
.h2,
.h3,
.h4,
.h5,
.h6,
h1,
h2,
h3,
h4,
h5 .h1 {
    color: #142533;
}
.h1,
h1 {
    font-size: 2.488rem;
    line-height: 1.35;
    font-weight: 500;
    font-family: museo-sans, Open sans, arial, sans-serif;
}
@media screen and (max-width: 768px) {
    .h1,
    h1 {
        font-size: 2.074rem;
    }
}
.h2,
h2 {
    font-size: 2.074rem;
    line-height: 1.4;
    font-weight: 500;
    font-family: museo-sans, Open sans, arial, sans-serif;
    margin-bottom: 2vw;
}
@media screen and (max-width: 768px) {
    .h2,
    h2 {
        font-size: 1.728rem;
    }
}
.h3,
h3 {
    font-size: 1.728rem;
    line-height: 1.3;
    font-weight: 500;
    font-family: museo-sans, Open sans, arial, sans-serif;
}
@media screen and (max-width: 767px) {
    .h3,
    h3 {
        font-size: 1.44rem;
    }
}
.h4,
h4 {
    font-size: 1.44rem;
    line-height: 1.3;
    font-weight: 500;
    font-family: museo-sans, Open sans, arial, sans-serif;
}
@media screen and (max-width: 767px) {
    .h4,
    h4 {
        font-size: 1.1875rem;
    }
}
.h5,
h5 {
    font-size: 1.1875rem;
    line-height: 1.3;
}
.h5,
.h6,
h5,
h6 {
    font-weight: 500;
    font-family: museo-sans, Open sans, arial, sans-serif;
}
.h6,
h6 {
    font-size: 17px;
    line-height: 1.4;
}
.plain-text h2,
.plain-text h3,
.plain-text h4,
.plain-text h5 {
    margin-top: 2vw;
    margin-bottom: 1vw;
}
@font-face {
    font-family: HMAlphaMono;
    src: url(../fonts/HMAlphaMono-Medium.html);
    font-weight: 400;
    font-style: normal;
}
@font-face {
    font-family: HMAlphaMono-italic;
    src: url(../fonts/HMAlphaMono-MediumItalic.html);
    font-weight: 400;
    font-style: italic;
}
.body,
.label {
    color: #565656;
}
.body,
.label,
.placeholder {
    font-size: 1rem;
    line-height: 1.5;
    font-weight: 500;
    font-family: Open Sans, arial, sans-serif;
}
.placeholder {
    color: #999;
}
.caption {
    font-size: 0.833rem;
    line-height: 1.4;
    color: #999;
}
.caption,
.small-text {
    font-weight: 500;
    font-family: inherit;
}
.small-text {
    font-size: 0.875rem;
    line-height: 1.55;
}
.super-small-text {
    font-size: 0.6875rem;
    line-height: 1.6;
    font-weight: 400;
    font-family: inherit;
    letter-spacing: 0.3px;
}
.ledger-product {
    font-weight: 300 !important;
}
.ledger-product b {
    font-weight: 500;
}
mark {
    background: #41ccb4;
}
@media screen and (min-width: calc(1480px + 30px)) {
    .plain-text.row {
        padding-left: 0;
        padding-right: 0;
    }
}
.plain-text p {
    margin: 22px 0;
}
.plain-text img {
    height: auto;
}
pre {
    white-space: normal;
    word-break: break-word;
    margin: 1vw 0;
    padding: 1vw;
    background: #f9f9f9;
    border-radius: 4px;
}
blockquote {
    padding-left: 3vw;
    border-left: 3px solid #142533;
    font-style: italic;
}
blockquote cite {
    color: #999;
    font-size: 0.833rem;
    margin-top: 7px;
    display: block;
}
.h1 a:link,
.h1 a:visited,
.h2 a:link,
.h2 a:visited,
.h3 a:link,
.h3 a:visited,
.h4 a:link,
.h4 a:visited,
.h5 a:link,
.h5 a:visited,
h1 a:link,
h1 a:visited,
h2 a:link,
h2 a:visited,
h3 a:link,
h3 a:visited,
h4 a:link,
h4 a:visited,
h5 a:link,
h5 a:visited {
    color: inherit;
    text-decoration: none !important;
}
a:link,
a:visited {
    -webkit-transition: all 0.2s ease;
    -moz-transition: all 0.2s ease;
    -ms-transition: all 0.2s ease;
    -o-transition: all 0.2s ease;
    transition: all 0.2s ease;
    text-decoration: none;
    color: #41ccb4;
    outline: 0;
}
a:link:hover,
a:visited:hover {
    text-decoration: underline;
    color: #30b49d;
}
a:link.link.primary,
a:visited.link.primary {
    color: #41ccb4 !important;
}
.clearfix {
    clear: both;
    display: block;
}
[class*="icon-"]:not(.icon) {
    font-size: 1.2rem;
    display: inline-block;
}
hr {
    border: 0;
    margin: 0;
    padding: 0;
    border-bottom: 1px solid #eee;
}
.align-right {
    text-align: right;
}
.align-center {
    text-align: center;
}
.align-left {
    text-align: left;
}
.is-valid {
    color: #66be54;
}
.is-error {
    color: #ea2e49;
}
.is-warning {
    color: #f90;
}
.is-primary {
    color: #41ccb4;
}
.is-hidden {
    display: none !important;
    visibility: hidden;
}
@media screen and (min-width: 992px) {
    .is-hidden-desktop {
        display: none !important;
    }
}
@media screen and (min-width: 768px) and (max-width: 992px) {
    .is-hidden-tablet {
        display: none !important;
    }
}
@media screen and (max-width: 768px) {
    .is-hidden-mobile {
        display: none !important;
    }
}
.icon-facebook,
.icon-github,
.icon-insta,
.icon-linkedin,
.icon-medium,
.icon-reddit,
.icon-twitter,
.icon-youtube {
    color: #999 !important;
    text-decoration: none !important;
}
.icon-facebook:hover,
.icon-github:hover,
.icon-insta:hover,
.icon-linkedin:hover,
.icon-medium:hover,
.icon-reddit:hover,
.icon-twitter:hover,
.icon-youtube:hover {
    color: #41ccb4 !important;
}
.color-brand-primary {
    color: #41ccb4;
}
.color-grey-600 {
    color: #565656;
}
.color-grey-500 {
    color: #999;
}
.color-grey-400 {
    color: #d8d8d8;
}
.color-darkblue,
.color-darkblue:link {
    color: #142533;
}
.bg {
    border-radius: 4px;
    padding-top: 2vw;
    padding-bottom: 2vw;
}
@media screen and (max-width: 690px) {
    .bg {
        padding: 4vw 1vw;
    }
}
.bg.bg-dark {
    background-color: #142533;
    color: #fff;
}
.bg.bg-dark .h1,
.bg.bg-dark .h2,
.bg.bg-dark .h3,
.bg.bg-dark .h4,
.bg.bg-dark .h5,
.bg.bg-dark h1,
.bg.bg-dark h2,
.bg.bg-dark h3,
.bg.bg-dark h4,
.bg.bg-dark h5 {
    color: #fff;
}
.bg.bg-light-grey {
    background-color: #f3f3f3;
}
.bg.bg-white {
    background-color: #fff;
}
.bg.bg-carbon {
    background-color: #1c1d20;
}
.bg.bg-carbon p {
    color: hsla(0, 0%, 100%, 0.7);
}
.bg.bg-carbon .h1,
.bg.bg-carbon .h2,
.bg.bg-carbon .h3,
.bg.bg-carbon .h4,
.bg.bg-carbon .h5,
.bg.bg-carbon h1,
.bg.bg-carbon h2,
.bg.bg-carbon h3,
.bg.bg-carbon h4,
.bg.bg-carbon h5 {
    color: #fff;
}
.bg.bg-carbon a:hover {
    color: inherit;
}
.bg.vault-illustration-bg {
    background-image: url(https://www.ledger.com/wp-content/uploads/2020/08/vault-illustration-bg.svg);
    background-repeat: no-repeat;
    background-position: 100%;
    background-size: contain;
}
@media screen and (max-width: 689px) {
    .bg.vault-illustration-bg {
        background-position: 100% 0;
        background-size: 125%;
    }
}
.bg.vault-illustration-bg > * {
    max-width: 100%;
}
@media screen and (max-width: 689px) {
    .bg.vault-illustration-bg > * {
        padding-top: 120px;
    }
}
@media screen and (min-width: 690px) and (max-width: 768px) {
    .bg.vault-illustration-bg > * {
        max-width: 62%;
    }
}
@media screen and (min-width: 769px) {
    .bg.vault-illustration-bg > * {
        max-width: 47%;
    }
}
#main > .bg {
    padding-top: calc(min(6vw, 75px));
    padding-bottom: calc(min(6vw, 75px));
}
@media screen and (max-width: 690px) {
    #main > .bg {
        padding-top: 13vw;
        padding-bottom: 13vw;
        margin-left: 0;
        margin-right: 0;
    }
}
.logo {
    flex: none;
    display: inherit;
}
.logo img {
    width: 97px;
}
.icon.icon-star,
.yotpo-icon-half-star,
.yotpo-icon-star {
    font-size: 0.8rem;
    color: #ffd24a;
    margin-bottom: 1vw;
    display: inline-block;
    font-family: ledger-icons-font;
    margin-right: 2px;
}
.yotpo-icon-star:before {
    content: "\e80d";
    margin-right: 3px;
}
.yotpo-icon-half-star:before {
    content: "\e80e";
    margin-right: 3px;
}
.fa-star,
.fa-star-half-alt {
    font-size: 0.8rem;
    color: #ffd24a;
    margin-bottom: 1vw;
    display: inline-block;
    margin-right: 2px;
}
.all-clickable {
    cursor: pointer;
}
.read-more {
    font-size: 1rem;
    display: inline-block;
}
/* .read-more:after {
    content: "\e80b";
    font-family: ledger-icons-font;
    display: inline-block;
    padding-left: 7px;
} */
.space-between {
    justify-content: space-between !important;
}
.flex-end {
    justify-content: flex-end !important;
}
.flex-start {
    justify-content: flex-start !important;
}
.flex-center {
    justify-content: center !important;
}
.flex-space-around {
    justify-content: space-around;
}
.align-items-center {
    align-items: center !important;
}
.align-items-end {
    align-items: flex-end;
}
.align-items-start {
    align-items: flex-start !important;
}
.align-items-baseline {
    align-items: baseline !important;
}
.flex-none {
    flex: none !important;
}
.flex-column {
    flex-direction: column;
}
.left-on-mobile {
    text-align: right;
}
.left-on-mobile,
.left-on-mobile > * {
    margin-right: 0;
}
@media screen and (max-width: 690px) {
    .left-on-mobile {
        text-align: left;
    }
    .left-on-mobile,
    .left-on-mobile > * {
        margin-left: 0;
    }
}
.right-on-mobile {
    text-align: left;
}
.right-on-mobile,
.right-on-mobile > * {
    margin-left: 0;
}
@media screen and (max-width: 690px) {
    .right-on-mobile {
        text-align: right;
    }
    .right-on-mobile,
    .right-on-mobile > * {
        margin-right: 0;
    }
}
@media screen and (max-width: 690px) {
    .order-1-mobile {
        order: 1;
    }
    .order-5-mobile {
        order: 5;
    }
    .order-10-mobile {
        order: 10;
    }
}
.level {
    display: inline-block;
    vertical-align: middle;
    padding: 6px 6px 4px 5px;
    border-radius: 4px;
    margin-right: 6px;
    margin-bottom: 4px;
}
.level[href]:hover {
    color: inherit !important;
    text-decoration: none !important;
}
.level.level-0 {
    background: #eee;
    color: #142533;
}
.level.level-1 {
    background: #e2f7f3;
    color: #41ccb4;
}
.level.level-2 {
    background: #ffeacc;
    color: #ff9600;
}
.level.level-3 {
    background: #fde7ea;
    color: #ea2e49;
}
.level.level-4 {
    background: #e2eafc;
    color: #6490f1;
}
.badge {
    border: 1px solid;
    border-radius: 4px;
    padding: 4px 6px;
    display: inline-block;
    vertical-align: middle;
    transition: all 0.2s;
}
.badge:not(.badge-nude) {
    color: #41ccb4;
    font-size: 0.833rem;
    text-transform: uppercase;
}
.badge:hover {
    color: inherit;
    text-decoration: none;
}
.badge.badge-tab {
    margin: 2px;
    border: 0;
    color: #999;
    cursor: pointer;
}
.badge.badge-tab.selected,
.badge.badge-tab:hover {
    background-color: #142533;
    color: #fff;
}
.black-badge {
    display: inline-block;
    background: #142533;
    color: #fff;
    border-radius: 40px;
    font-size: 0.875rem;
    padding: 6px 20px;
    text-transform: uppercase;
}
.black-badge > .fa,
.black-badge > .fal {
    color: #41ccb4;
    margin: 0 7px 0 0;
}
.tooltip {
    color: #999;
    top: 2px;
    position: relative;
    cursor: pointer;
}
.tooltip:hover ~ .tooltip-content {
    display: block !important;
}
.tooltip-content {
    display: none;
    position: absolute;
    max-width: 300px;
    min-width: 200px;
    text-align: left;
    font-size: 12px;
    font-family: Open Sans, arial, sans-serif;
    line-height: 1.4;
    padding: 1vw;
    background: #142533;
    color: #fff;
    transition: all 0.3s;
    border-radius: 4px;
    left: 0;
    right: 0;
}
main :not(.height-auto) > iframe {
    width: 100%;
    height: 310px;
    border-radius: 4px;
}
@media screen and (max-width: 690px) {
    main :not(.height-auto) > iframe {
        height: 200px;
    }
}
main :not(.height-auto) > iframe.iframe-nofull {
    margin-left: auto;
    margin-right: auto;
    display: block;
}
@media screen and (min-width: 992px) {
    main :not(.height-auto) > iframe.iframe-nofull {
        max-width: 650px;
        min-height: 500px;
    }
}
.target-section {
    clear: both;
    position: relative;
    top: -50px;
    width: 100px;
}
@media screen and (min-width: 992px) {
    .target-section {
        top: -80px;
    }
}
.target {
    margin-top: -120px;
    position: absolute;
}
.v-padding-lg {
    padding-top: 7vw;
    padding-bottom: 7vw;
}
@media screen and (max-width: 690px) {
    .v-padding-lg {
        padding-top: 13vw;
        padding-bottom: 13vw;
    }
}
.v-padding-md {
    padding-top: 5vw;
    padding-bottom: 5vw;
}
@media screen and (max-width: 690px) {
    .v-padding-md {
        padding-top: 7vw;
        padding-bottom: 7vw;
    }
}
.v-padding-sm {
    padding-top: 3vw;
    padding-bottom: 3vw;
}
@media screen and (max-width: 690px) {
    .v-padding-sm {
        padding-top: 5vw;
        padding-bottom: 5vw;
    }
}
.v-padding-xs {
    padding-top: 2vw;
    padding-bottom: 2vw;
}
@media screen and (max-width: 690px) {
    .v-padding-xs {
        padding-top: 3vw;
        padding-bottom: 3vw;
    }
}
.h-padding-md {
    padding-left: 5vw;
    padding-right: 5vw;
}
@media screen and (max-width: 690px) {
    .h-padding-md {
        padding-left: 5vw;
        padding-right: 5vw;
    }
}
.h-padding-sm {
    padding-left: 3vw;
    padding-right: 3vw;
}
@media screen and (max-width: 690px) {
    .h-padding-sm {
        padding-left: 5vw;
        padding-right: 5vw;
    }
}
.v-margin-lg {
    margin-top: 7vw;
    margin-bottom: 7vw;
}
@media screen and (max-width: 690px) {
    .v-margin-lg {
        margin-top: 13vw;
        margin-bottom: 13vw;
    }
}
.v-margin-md {
    margin-top: 5vw;
    margin-bottom: 5vw;
}
@media screen and (max-width: 690px) {
    .v-margin-md {
        margin-top: 7vw;
        margin-bottom: 7vw;
    }
}
.v-margin-sm {
    margin-top: 3vw;
    margin-bottom: 3vw;
}
@media screen and (max-width: 690px) {
    .v-margin-sm {
        margin-top: 5vw;
        margin-bottom: 5vw;
    }
}
.v-margin-xs {
    margin-top: 2vw;
    margin-bottom: 2vw;
}
@media screen and (max-width: 690px) {
    .v-margin-xs {
        margin-top: 5vw;
        margin-bottom: 5vw;
    }
}
.v-margin-xxs {
    margin-top: 1vw;
    margin-bottom: 1vw;
}
@media screen and (max-width: 690px) {
    .v-margin-xxs {
        margin-top: 2vw;
        margin-bottom: 2vw;
    }
}
.margin-lg {
    margin-bottom: 120px;
}
@media screen and (max-width: 768px) {
    .margin-lg {
        margin-bottom: 75px;
    }
}
.margin-md {
    margin-bottom: 75px;
}
@media screen and (max-width: 768px) {
    .margin-md {
        margin-bottom: 45px;
    }
}
.margin-sm {
    margin-bottom: 45px;
}
@media screen and (max-width: 768px) {
    .margin-sm {
        margin-bottom: 30px;
    }
}
.margin-xs {
    margin-bottom: 30px;
}
.margin-xxs {
    margin-bottom: 15px;
}
.padding-md {
    padding: 75px;
}
@media screen and (max-width: 690px) {
    .padding-md {
        padding: 30px;
    }
}
.padding-sm {
    padding: 45px;
}
@media screen and (max-width: 690px) {
    .padding-sm {
        padding: 30px;
    }
}
.padding-xs {
    padding: 30px;
}
.ldg-container {
    max-width: 1480px;
    margin: auto;
}
.ldg-container,
.row {
    box-sizing: border-box;
}
.row {
    position: relative;
}
@media screen and (min-width: 992px) {
    .row {
        margin-left: 4%;
    }
    .row,
    .row > .row:not(.no-margin-right) {
        margin-right: 4%;
    }
    .row > .row:not(.no-margin-left) {
        margin-left: 4%;
    }
}
@media screen and (max-width: 992px) {
    .row {
        margin-left: 3%;
        margin-right: 3%;
    }
}
@media screen and (max-width: 690px) {
    .row.no-margin-mobile {
        margin-left: 0;
        margin-right: 0;
    }
}
.flexbox {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
    align-items: inherit;
}
@media screen and (max-width: 690px) {
    .flexbox {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        flex-flow: column wrap;
        justify-content: inherit;
        align-items: inherit;
    }
}
@media screen and (max-width: 690px) and (-ms-high-contrast: active),
    screen and (max-width: 690px) and (-ms-high-contrast: none) {
    .flexbox {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        flex-flow: row wrap;
        justify-content: inherit;
        align-items: inherit;
    }
}
.flexbox > * {
    flex: 1 0 0%;
}
.flexbox.flex-column {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    flex-flow: column wrap;
    justify-content: space-between;
    align-items: inherit;
}
#header {
    position: fixed;
    width: 100%;
    top: 0;
    background: #f9f9f9;
    z-index: 99;
}
#header .ldg-container .row {
    display: flex;
    height: 60px;
    align-items: center;
}
@media screen and (min-width: 993px) {
    #header .ldg-container .row {
        height: 90px;
    }
}
@media screen and (max-width: 992px) {
    #header .ldg-container .row {
        flex-flow: row nowrap !important;
    }
}
@media screen and (min-width: calc(1480px + 30px)) {
    #header .ldg-container .row {
        padding-right: 0;
        padding-left: 0;
    }
}
#header .cart,
#header .logo {
    flex: none;
}
#header .cart img,
#header .logo img {
    width: 97px;
}
#header .cart a:link,
#header .cart a:visited {
    color: #142533;
    transition: all 0.2s;
}
/* #header .cart #mobile-menu.is-open > i:before {
    content: "\e806";
} */
#mobile-menu
{
    display: none;
}
@media(max-width:992px)
{
    #mobile-menu
    {
        display:block;
    }
}
#header nav {
    flex: 2;
    justify-content: center;
}
#header .icon-bars {
    display: none;
    padding-right: 0 !important;
}
@media screen and (max-width: 992px) {
    #header .cart {
        display: flex;
        flex: 2;
        justify-content: flex-end;
    }
    #header .icon-bars,
    #header .icon-shopping_cart {
        display: block;
        padding: 18px 12px;
    }
}
#header .pick-up-news {
    padding: 0.5vw 1vw;
    background: #1f2326;
    color: #fff;
    text-align: center;
}
#header .pick-up-news,
#header .pick-up-news a {
    font-size: 0.833rem;
}
@media screen and (max-width: 992px) {
    #header .pick-up-news {
        display: none;
    }
}
#footer {
    background: #f9f9f9;
    width: 100%;
    padding: 2vw 0;
    margin-top: 5vw;
    border-top: 1px dashed #fefefe;
    clear: both;
    font-size: 0.833rem;
    line-height: 1.4;
    font-weight: 500;
    font-family: Open Sans, arial, sans-serif;
}
@media screen and (max-width: 5vw) {
    #footer {
        margin-top: 13vw;
    }
}
#footer .copyright {
    border-top: 1px solid #eee;
    margin-top: 28px;
}
#footer .copyright .logo {
    margin: 22px 0 1vw;
    display: block;
}
#footer .form-bloc {
    position: relative;
}
@media screen and (min-width: 690px) {
    #footer .form-bloc {
        align-items: center;
        justify-content: space-between;
    }
}
@media screen and (max-width: 992px) {
    #footer .form-bloc {
        margin-bottom: 15px;
    }
}
#footer .form-bloc > * {
    flex: 1;
    color: #142533;
}
@media screen and (max-width: 690px) {
    #footer .form-bloc > * {
        margin: 8px 0;
    }
}
#footer .form-bloc > .custom-html-widget,
#footer .form-bloc form {
    justify-content: flex-start;
}
@media screen and (min-width: 768px) {
    #footer .form-bloc > .custom-html-widget,
    #footer .form-bloc form {
        max-width: 360px;
    }
}
@media screen and (min-width: 690px) and (max-width: 768px) {
    #footer .form-bloc > .custom-html-widget,
    #footer .form-bloc form {
        padding-left: 1vw;
    }
}
#footer .form-bloc > .custom-html-widget .outline,
#footer .form-bloc form .outline {
    background: #fff !important;
}
#footer .form-bloc .social-icons {
    margin-top: 15px;
}
#footer .form-bloc .social-icons a {
    font-size: 1.1875rem;
    color: #999;
}
@media screen and (max-width: 690px) {
    #footer .form-bloc .social-icons a {
        margin-right: 7px;
    }
}
@media screen and (min-width: 690px) {
    #footer .form-bloc .social-icons {
        text-align: right;
        margin-top: 0;
    }
}
#footer .form-bloc .social-icons .press-contact {
    margin-top: 15px;
}
@media screen and (min-width: 691px) {
    #footer .form-bloc .social-icons .press-contact {
        margin-left: 15px;
        margin-top: 3px;
    }
}
#footer .form-bloc .social-icons .press-contact a {
    font-size: inherit;
    color: inherit;
    text-decoration: underline;
}
#footer nav {
    margin-bottom: 3vw;
}
aside {
    max-width: 300px;
    order: 2;
}
@media screen and (min-width: 992px) {
    aside {
        margin-right: 4%;
        margin-left: 4%;
    }
    aside > * {
        margin-bottom: 3vw;
    }
}
@media screen and (max-width: 992px) {
    aside {
        margin-right: 6%;
        margin-left: 4%;
        max-width: 100%;
    }
    aside > * {
        margin-bottom: 7vw;
    }
}
@media screen and (max-width: 690px) {
    aside {
        margin-top: 5vw;
        padding-top: 5vw;
        border-top: 1px dashed #eee;
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        flex-flow: column nowrap;
        justify-content: flex-start;
        align-items: flex-start;
    }
    aside > :first-of-type {
        order: 2;
    }
}
input:not([type="radio"]):not([type="checkbox"]),
textarea {
    -webkit-appearance: none;
    appearance: none;
}
input:not(textarea):not(select):not([type="radio"]):not([type="checkbox"]):not([type="submit"]) {
    height: 46px;
}
button {
    height: 45px;
}
input:not(textarea):not(select):not([type="radio"]):not([type="checkbox"]):not([type="submit"]) {
    max-width: 100%;
}
@media screen and (min-width: 690px) {
    input:not(textarea):not(select):not([type="radio"]):not([type="checkbox"]):not([type="submit"]) {
        width: 250px;
    }
}
@media screen and (max-width: 690px) {
    input:not(textarea):not(select):not([type="radio"]):not([type="checkbox"]):not([type="submit"]) {
        width: 200px;
    }
}
input:not([type="file"]):not([type="submit"]),
select,
textarea {
    font-size: 0.833rem;
    line-height: inherit;
    font-weight: 500;
    font-family: Open Sans, arial, sans-serif;
    color: #142533;
    border: 1px solid #eee;
    padding: 12px;
    border-radius: 4px;
    max-width: 100%;
    z-index: 5;
    box-sizing: border-box;
    background: #fff;
    transition: font-size 0.2s;
}
input:not([type="file"]):not([type="submit"]):active,
input:not([type="file"]):not([type="submit"]):focus,
select:active,
select:focus,
textarea:active,
textarea:focus {
    border-color: #41ccb4;
    outline: none;
}
input:not([type="file"]):not([type="submit"]):active:not(textarea):not(select):not(.nolabel),
input:not([type="file"]):not([type="submit"]):focus:not(textarea):not(select):not(.nolabel),
select:active:not(textarea):not(select):not(.nolabel),
select:focus:not(textarea):not(select):not(.nolabel),
textarea:active:not(textarea):not(select):not(.nolabel),
textarea:focus:not(textarea):not(select):not(.nolabel) {
    padding-top: 19px;
    padding-bottom: 5px;
}
input:not([type="file"]):not([type="submit"])[type="date"],
select[type="date"],
textarea[type="date"] {
    color: #fff;
}
input:not([type="file"]):not([type="submit"]):not([type="submit"]),
input:not([type="file"]):not([type="submit"])[type="file"],
select:not([type="submit"]),
select[type="file"],
textarea:not([type="submit"]),
textarea[type="file"] {
    background: #fff;
}
input:not([type="file"]):not([type="submit"])[type="submit"],
select[type="submit"],
textarea[type="submit"] {
    border: none;
    background: inherit;
}
textarea {
    resize: vertical;
    width: 100%;
    min-height: 100px;
}
select {
    color: #999;
}
select:not([size]) {
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
    background: #fff url(../images/arrow.html) no-repeat center right 12px !important;
    padding-right: 36px;
    -ms-word-break: normal;
    word-break: normal;
    line-height: 1.5;
    height: 45px;
    width: 100%;
}
select:not([size])::-ms-expand {
    display: none;
}
select option {
    color: #142533;
}
::placeholder,
label {
    font-size: 0.833rem;
    color: #999;
}
:-ms-input-placeholder {
    font-size: 0.833rem;
    color: #999;
}
::-ms-input-placeholder {
    font-size: 0.833rem;
    color: #999;
}
.fields-container {
    position: relative;
    display: inline-block;
}
@media screen and (max-width: 690px) {
    .fields-container {
        display: block;
    }
}
.fields-container > span + label,
.fields-container input + label {
    position: absolute;
    top: 14px;
    left: 0;
    padding-left: 0.8rem;
    max-width: 100%;
    transition: all 0.2s;
    z-index: 20;
}
.fields-container.is-active label {
    top: 6px;
    font-size: 10px;
}
.fields-container.is-active input {
    padding-top: 19px;
    padding-bottom: 5px;
}
.fields-container.is-active input[type="date"] {
    color: inherit;
}
.fields-container label + select {
    display: block;
    margin-top: 12px;
    font-size: 0.833rem;
    line-height: inherit;
    font-weight: 500;
    font-family: Open Sans, arial, sans-serif;
    color: #142533;
}
.fields-container-options input,
.fields-container-options label {
    display: inline-block;
    vertical-align: middle;
    width: auto;
}
.fields-container-options label {
    margin-right: 12px;
}
form .wpcf7-not-valid-tip {
    padding-top: 7px;
    color: #ea2e49;
    font-size: 0.833rem;
    line-height: inherit;
    font-weight: 500;
    font-family: Open Sans, arial, sans-serif;
}
form .fields-container .wpcf7-not-valid {
    border: 1px solid #ea2e49 !important;
}
form.inline-form,
form .inline-form {
    display: flex;
    justify-content: center;
    align-items: stretch;
}
form.inline-form [type="submit"],
form .inline-form [type="submit"],
form.inline-form button.button,
form .inline-form button.button {
    padding: 0 1rem;
    margin: 0;
    font-size: 0.875rem;
    vertical-align: top;
    position: relative;
}
form.inline-form .fields-container,
form .inline-form .fields-container {
    margin-right: 10px;
}
@media screen and (max-width: 992px) {
    form.inline-form input:not(textarea):not(select):not([type="radio"]):not([type="checkbox"]),
    form .inline-form input:not(textarea):not(select):not([type="radio"]):not([type="checkbox"]) {
        width: inherit;
    }
}
form.inline-form label,
form .inline-form label {
    white-space: nowrap;
    overflow: hidden;
    max-width: 90% !important;
    text-overflow: ellipsis;
}
form.inline-form__space-between,
form .inline-form__space-between {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
}
form.inline-form__space-between .fields-container,
form .inline-form__space-between .fields-container {
    width: 45%;
}
form .footer-form {
    text-align: right;
}
form .footer-form > * {
    margin-bottom: 1vw;
    display: flex;
    justify-content: flex-end;
}
form .footer-form .button {
    padding: 15px 20px;
    position: relative;
    white-space: nowrap;
    margin-top: 1vw;
}
form [class^="is-"] {
    display: block !important;
    font-size: 0.875rem;
    line-height: 1rem;
    margin-top: 8px;
}
#cover-form {
    background: #fff;
    border-radius: 4px;
    padding: 2vw;
    max-width: 435px;
    width: 100%;
    margin: 0 auto;
}
@media screen and (max-width: 690px) {
    #cover-form {
        margin-top: 5vw;
        max-width: 100%;
        padding: 7vw 2vw;
    }
}
@media screen and (min-width: 690px) and (max-width: 880px) {
    #cover-form {
        margin-top: 5vw;
    }
}
#cover-form .fields-container {
    display: block;
}
#cover-form .fields-container input {
    width: 100% !important;
}
#cover-form .h4,
#cover-form h4 {
    color: initial !important;
    margin-bottom: 3vw;
}
@media screen and (min-width: 690px) {
    #cover-form .h4,
    #cover-form h4 {
        margin-bottom: 1vw;
    }
}
#cover-form .v-margin-xs {
    margin-top: 1vw;
    margin-bottom: 1vw;
}
@media screen and (max-width: 690px) {
    #cover-form .v-margin-xs {
        margin: 2vw 0;
    }
}
.wpcf7-aborted:before,
.wpcf7-acceptance-missing:before,
.wpcf7-mail-sent-ok:before,
.wpcf7-spam-blocked:before,
.wpcf7-validation-errors:before {
    font-family: ledger-icons-font;
    float: left;
    content: "\e806";
    margin-right: 16px;
    font-size: 1.5rem;
    color: #27d0e2 !important;
    line-height: 1.5rem;
}
.wpcf7-response-output {
    background: #142533;
    border-radius: 4px;
    padding: 1vw !important;
    text-align: left;
    margin-top: 1vw;
    border: 0 !important;
    color: #fff;
    font-size: 0.833rem;
    line-height: 1.5;
    font-weight: 400;
    font-family: Open Sans, arial, sans-serif;
}
@media screen and (max-width: 690px) {
    .wpcf7-response-output {
        padding: 4vw !important;
    }
}
.wpcf7-response-output.wpcf7-mail-sent-ok {
    background: #f3f3f3;
    color: #142533;
}
.wpcf7-response-output.wpcf7-mail-sent-ok:before {
    content: "\e81d";
}
.ajax-loader {
    visibility: hidden;
    width: 16px;
    height: 16px;
    border: none;
    padding: 0;
    position: absolute;
}
ol,
ul {
    margin: 12px 0 32px 22px;
}
ol li,
ul li {
    margin: 10px;
    list-style: disc;
}
ol li ul,
ul li ul {
    margin-left: 32px;
    margin-bottom: 22px;
}
ol li {
    list-style: decimal;
    padding-left: 12px;
}
.ol-bullet,
.ol-bullet li {
    margin: 0;
    padding: 0;
}
.ol-bullet li {
    list-style: none;
    display: flex;
    align-items: baseline;
}
.ol-bullet li:not(:last-child) {
    margin-bottom: 15px;
}
.ol-bullet li:before {
    counter-increment: section;
    content: counter(section);
    border-radius: 100%;
    color: #41ccb4;
    border: 1px solid;
    width: 22px;
    height: 22px;
    line-height: 22px;
    padding: 0;
    text-align: center;
    margin-right: 15px;
    flex: none;
}
.list-checked > *,
.no-bullet,
.no-bullet > * {
    list-style: none;
    margin-left: 0;
}
.list-checked > * {
    display: flex;
}
.list-checked > :before {
    content: "\f00c";
    font-family: Font Awesome\5 Pro;
    color: #41ccb4;
    margin-right: 10px;
}
.pipe-list,
.pipe-list > * {
    margin-left: 0;
}
.pipe-list > * {
    list-style: none;
    border-left: 1px solid;
    padding-left: 7px;
}
.pipe-list > :not(:last-child) {
    margin-bottom: 1vw;
}
.article-list {
    flex-grow: 2;
}
.article-item {
    margin-bottom: 7vw;
}
.article-item h1 {
    margin-bottom: 1vw;
}
.article-item img {
    max-width: 100%;
    border: 1px solid #f5f5f5;
}
.article-item .datetime {
    margin-top: 1vw;
}
@media screen and (min-width: 1200px) {
    .article-item {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        flex-flow: row nowrap;
        justify-content: flex-start;
        align-items: flex-start;
        margin-bottom: 3vw;
    }
    .article-item > * {
        padding-top: 0 !important;
        flex: auto;
    }
    .article-item > * img {
        max-width: 300px;
        margin-right: 3vw;
    }
}
@media screen and (max-width: 992px) {
    .article-item img {
        width: 100%;
    }
}
@media screen and (max-width: 992px) {
    article {
        min-width: 85%;
    }
}
article hr {
    margin: 32px 0 22px;
}
article .content {
    justify-content: space-between !important;
}
article .content p:first-of-type > span {
    color: #999;
    font-size: 1rem;
    line-height: inherit;
    font-weight: 500;
    font-family: Open Sans, arial, sans-serif;
}
article footer .icon {
    font-size: 1.44rem;
}
article .datetime span {
    display: inline-block;
    vertical-align: top;
    margin: 0 7px;
    color: #d8d8d8;
}
article img {
    margin-bottom: 12px;
}
.b-title-master {
    align-items: center;
}
.b-title-master > .row {
    padding: 0;
}
.b-title-master:not(.align-left) {
    text-align: center;
}
.b-title-master .h3,
.b-title-master h1 {
    margin-bottom: 1vw;
}
.b-title-master .h3 + *,
.b-title-master h1 + * {
    margin-bottom: 2vw;
}
@media screen and (max-width: 690px) {
    .b-title-master .h3 + *,
    .b-title-master h1 + * {
        margin-bottom: 5vw;
    }
}
.b-title-master .button {
    margin-top: 5vw;
}
.b-title-master .button + * {
    margin-top: 2vw;
}
@media screen and (min-width: 690px) {
    .b-title-master:not(.align-left) > * {
        max-width: 75%;
        margin-left: auto;
        margin-right: auto;
    }
    .b-title-master .button {
        margin-top: 3vw;
    }
}
.b-title-master .h2 + .button,
.b-title-master h2 + .button {
    margin-top: 0;
}
@media screen and (max-width: 690px) {
    .b-title-master br {
        display: none;
    }
    .b-title-master .h3,
    .b-title-master > *,
    .b-title-master h1 {
        margin-bottom: 5vw;
    }
}
.b-stat .h2,
.b-stat .h5,
.b-stat h2,
.b-stat h5 {
    margin: 0;
}
.b-stat > * {
    padding: 4vw 2vw;
}
.b-stat > * > * {
    margin: 0 2vw;
}
@media screen and (max-width: 690px) {
    .b-stat > * {
        padding: 5vw;
    }
    .b-stat > * > * {
        margin: 1vw 2vw 5vw;
    }
}
.b-stat:not(.bg-dark) {
    border-top: 1px solid #eee;
    border-bottom: 1px solid #eee;
}
.c-grid-table .row {
    flex-wrap: wrap;
}
.c-grid-table .row > * {
    text-align: center;
    margin-bottom: 7vw;
}
@media screen and (min-width: 992px) {
    .c-grid-table .row > * {
        min-width: 23%;
    }
}
@media screen and (max-width: 992px) {
    .c-grid-table .row > * {
        min-width: 30%;
        margin-left: 2vw;
        margin-right: 2vw;
    }
}
.c-grid-table .row img {
    max-width: 60px;
    max-height: 60px;
    margin-bottom: 2vw;
}
.c-grid-table .row .h5,
.c-grid-table .row h5 {
    display: block;
}
.bloc-text {
    min-width: 175px;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    flex-flow: column wrap;
    justify-content: flex-start;
    align-items: normal;
    max-height: auto;
}
@media screen and (min-width: 690px) {
    .bloc-text {
        align-items: normal;
        height: inherit;
        padding-top: 1vw;
        padding-bottom: 1vw;
    }
}
@media screen and (max-width: 690px) {
    .bloc-text:not(:last-of-type) {
        margin-bottom: 7vw;
    }
}
.bloc-text h1,
.bloc-text h2,
.bloc-text h3,
.bloc-text p:not(:last-of-type) {
    margin-bottom: 15px;
}
.bloc-text h1:empty,
.bloc-text h2:empty,
.bloc-text h3:empty,
.bloc-text p:not(:last-of-type):empty {
    display: none;
}
.bloc-text .icon:not(.icon-long_arrow_right):not(.icon-star):not(.fa-star) {
    font-size: 2.488rem;
    color: #41ccb4;
    margin: 0 0 calc(max(1.5vw, 15px));
}
.bloc-text .fa,
.bloc-text .fal {
    font-size: 2.7rem;
    color: #41ccb4;
    margin-bottom: 15px;
}
.bloc-text img {
    margin: 0 auto 2vw;
    width: max-content;
}
.bloc-text .bg-illustration {
    background-size: contain;
    background-position: 50%;
    background-repeat: no-repeat;
    height: 200px;
}
@media (-ms-high-contrast: none), screen and (-ms-high-contrast: active) {
    .bloc-text > div,
    .bloc-text > div img {
        max-height: 300px;
    }
}
@media screen and (max-width: 690px) {
    .bloc-text > .icon,
    .bloc-text > .icon + p,
    .bloc-text > .icon + p + p {
        text-align: center;
    }
    .bloc-text h1,
    .bloc-text p {
        margin-bottom: 3vw;
    }
}
.bloc-text .clearfix {
    display: none;
}
.bloc-text.card {
    background: #fff;
    box-sizing: border-box;
    padding: 30px;
    border-radius: 4px;
    margin: 1vw 1vw 1vw 0;
}
@media screen and (max-width: 690px) {
    .bloc-text.card {
        padding: 5vw;
        margin: 2vw 0;
    }
}
.bloc-text.card a {
    margin-top: 15px;
}
.bloc-text.float-img {
    position: relative;
    width: 100%;
    padding-top: 0;
    box-sizing: border-box;
}
.bloc-text.float-img:not(:last-child) {
    margin-bottom: 7vw;
}
.bloc-text.float-img img {
    max-width: 170px;
    max-height: 100%;
}
@media screen and (min-width: 690px) {
    .bloc-text.float-img {
        padding-left: 210px;
    }
    .bloc-text.float-img:not(:last-child) {
        margin-bottom: 3vw;
    }
    .bloc-text.float-img img {
        position: absolute;
        left: 0;
        top: 0;
    }
}
@media screen and (min-width: 690px) {
    .bloc-item {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        flex-flow: row nowrap;
        justify-content: flex-start;
        align-items: inherit;
    }
}
.bloc-item > :not(.content) {
    flex: 1;
    min-width: 40%;
}
.bloc-item > .content {
    flex: 2;
}
@media screen and (max-width: 690px) {
    .bloc-item:not(.flat-line) > :first-of-type {
        order: 3;
    }
}
@media screen and (max-width: 690px) {
    .bloc-item {
        flex-direction: column;
        margin-bottom: 32px;
    }
    .bloc-item > * {
        margin-top: 3vw;
    }
    .bloc-item img {
        display: block;
        margin: 15px auto 45px;
    }
}
.bloc-item .content {
    display: flex;
    flex-flow: column;
    justify-content: center;
}
@media screen and (min-width: 690px) {
    .bloc-item .content > * {
        margin-left: 4vw;
        margin-right: 5vw;
    }
}
.bloc-item > :last-of-type.content > * {
    margin-right: 0;
}
.bloc-item .button {
    margin-top: 3vw;
    align-self: start;
}
.bloc-item.flat-line {
    margin-bottom: 52px;
}
.bloc-item.flat-line .bloc-text {
    margin: 0;
}
.bloc-item.flat-line > * {
    flex: inherit;
}
.bloc-item.flat-line img {
    max-width: 165px;
}
@media screen and (min-width: 690px) {
    .bloc-item.flat-line img {
        margin-right: 3vw;
    }
}
.c-diagonal-bloc > .row.flexbox {
    flex-direction: column;
}
@media (-ms-high-contrast: none), screen and (-ms-high-contrast: active) {
    .c-diagonal-bloc > .row.flexbox {
        flex-direction: row;
    }
}
.c-diagonal-bloc .bloc-item ~ .bloc-item {
    margin-top: 7vw;
}
.c-diagonal-bloc .bloc-item .bloc-text {
    padding: 0;
    margin: 0;
}
.c-diagonal-bloc .bloc-item .bloc-text a {
    margin-bottom: 0;
}
.c-diagonal-bloc .bloc-item img {
    max-width: 450px;
    width: 100%;
}
@media screen and (max-width: 768px) {
    .c-diagonal-bloc .bloc-item img {
        margin-bottom: 7vw;
        max-width: 100%;
    }
}
.c-diagonal-bloc .bloc-item .content {
    flex: 1;
    margin-left: 7vw;
}
@media screen and (min-width: 769px) {
    .c-diagonal-bloc .bloc-item > :not(.content) {
        text-align: center;
    }
}
@media (-ms-high-contrast: none), screen and (-ms-high-contrast: active) {
    .c-diagonal-bloc .bloc-item {
        flex-direction: row;
    }
}
@media screen and (max-width: 768px) {
    .c-diagonal-bloc .bloc-item {
        flex-direction: column;
    }
    .c-diagonal-bloc .bloc-item .content,
    .c-diagonal-bloc .bloc-item .content > * {
        margin-right: 0;
        margin-left: 0;
    }
}
@media screen and (min-width: 769px) {
    .c-diagonal-bloc:not(.reverse) .bloc-item:nth-of-type(2n) > :not(.content) {
        order: 5;
    }
    .c-diagonal-bloc:not(.reverse) .bloc-item:nth-of-type(2n) .content {
        margin-left: 0;
        margin-right: 7vw;
    }
}
.c-diagonal-bloc.reverse .bloc-item {
    display: flex;
}
@media screen and (min-width: 769px) {
    .c-diagonal-bloc.reverse .bloc-item:nth-of-type(odd) > :not(.content) {
        order: 5;
    }
    .c-diagonal-bloc.reverse .bloc-item:nth-of-type(odd) .content {
        margin-left: 0;
        margin-right: 7vw;
    }
}
@media screen and (max-width: 769px) {
    .c-diagonal-bloc.reverse .bloc-item > :not(.content) {
        order: 10;
        margin-bottom: 5vw;
    }
    .c-diagonal-bloc.reverse .bloc-item .content {
        order: 1;
        margin-bottom: 5vw;
    }
}
.c-diagonal-bloc.reverse .bloc-item img {
    margin-bottom: 0;
}
.bloc-list {
    min-width: 48%;
    margin: 0 1vw 2vw 0;
}
.bloc-list ul {
    margin: 12px 0 8px 22px;
}
.bloc-list ul li {
    margin: 10px 0 18px 18px;
}
.grid-item {
    text-align: center;
    text-decoration: none !important;
    margin-top: 30px;
}
.grid-item > p:not([class]) {
    color: #565656;
}
.grid-item .h5,
.grid-item h5 {
    margin-top: 12px;
}
.grid-item img {
    max-width: 62px;
}
@media screen and (max-width: 690px) {
    .grid-item:not(.icons) {
        text-align: left;
        margin-bottom: 5vw;
    }
    .grid-item:not(.icons) img {
        float: left;
        margin-right: 5vw;
        max-width: 56px;
    }
}
.grid-item.icons {
    justify-content: center;
    display: flex;
    flex-direction: column;
    align-items: center;
}
@media screen and (min-width: 992px) {
    .grid-item.icons {
        flex: none;
        width: 175px;
    }
}
@media screen and (max-width: 992px) {
    .grid-item.icons {
        width: 28%;
    }
    .grid-item.icons > p {
        font-size: 1rem;
    }
}
.grid-item.icons > p {
    word-break: break-word;
    padding-left: 1vw;
    padding-right: 1vw;
    box-sizing: border-box;
}
.grid-item.icons img {
    max-width: inherit;
    height: 30px;
}
.grid-item.icons i {
    font-size: 2.074rem;
}
.grid-item[href].checked,
.grid-item[href]:hover {
    background: #fff;
}
.grid-items {
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: center;
}
@media screen and (max-width: 992px) {
    .grid-items {
        justify-content: space-around;
    }
}
@media screen and (max-width: 992px) {
    .grid-items > * {
        flex: none;
        min-width: 120px;
    }
}
.grid-items > .bg {
    margin-right: 2vw;
}
.bloc-banner {
    font-size: 0.833rem;
    color: #999;
    background-repeat: no-repeat;
}
@media screen and (max-width: 690px) {
    .bloc-banner br {
        display: none;
    }
}
@media screen and (min-width: 992px) {
    .bloc-banner h2 {
        margin: 1vw 0;
    }
}
.toggle-list {
    margin-bottom: 0;
}
.toggle-list .fields-container-options:not(:last-of-type) {
    margin-bottom: 45px;
}
.toggle-list .fields-container-options i {
    margin: 2px 7px 0 0;
    transition: all 0.2s;
}
.toggle-list .fields-container-options label {
    cursor: pointer;
    display: flex;
    flex-flow: row nowrap;
    align-items: flex-start;
    transition: all 0.2s;
    outline: none;
    -webkit-tap-highlight-color: transparent;
}
.toggle-list .fields-container-options input {
    height: 0;
    visibility: hidden;
    display: block;
}
.toggle-list .fields-container-options input ~ label + p {
    overflow: hidden;
    opacity: 0;
    max-height: 0;
    margin: 0 0 0 32px;
    transition: max-height 0.5s cubic-bezier(0, 1.05, 0, 1);
}
.toggle-list .fields-container-options input:checked ~ label i {
    transform: rotate(90deg);
}
.toggle-list .fields-container-options input:checked ~ label + p {
    max-height: 100vh;
    opacity: 1;
    margin: 1vw 0 1vw 32px;
    transition: opacity max-height 0.5s cubic-bezier(0, 1.05, 0, 1);
}
@media screen and (max-width: 992px) {
    .toggle-list .fields-container-options input:checked ~ label + p {
        margin: 2vw 0 2vw 32px;
    }
}
.flexbox.col {
    justify-content: space-between;
}
@media screen and (-ms-high-contrast: active) and (max-width: 992px),
    screen and (-ms-high-contrast: none) and (max-width: 992px) {
    .flexbox.col:not(.scrolling-content) {
        display: block;
    }
}
.flexbox.col > * {
    flex: 1;
    margin-right: calc(min(15px, 1vw));
    min-width: 15%;
    max-width: 48%;
}
@media screen and (max-width: 992px) {
    .flexbox.col > * {
        max-width: 100%;
    }
}
.flexbox.col.col-2 > * {
    flex: 0;
    min-width: 45%;
}
.flexbox.col.col-2 > :nth-of-type(2n) {
    margin-right: 0 !important;
}
.flexbox.col.col-3 > * {
    flex: 0;
    min-width: 30%;
}
.flexbox.col.col-3 > :nth-of-type(3n) {
    margin-right: 0 !important;
}
.flexbox.col.col-4 > * {
    flex: 0;
    min-width: 23%;
}
.flexbox.col.col-4 > :nth-of-type(4n) {
    margin-right: 0 !important;
}
.flexbox.col.col-5 > * {
    flex: 0;
    min-width: 18%;
    margin-right: 1vw !important;
}
.flexbox.col.col-5 > :nth-of-type(5n) {
    margin-right: 0 !important;
}
.flexbox.col.col-6 > * {
    flex: 0;
    min-width: 15%;
}
.flexbox.col.col-6 > :nth-of-type(6n) {
    margin-right: 0 !important;
}
.col:not(.flexbox) {
    justify-content: space-between;
    display: grid;
    grid-row-gap: 1vw;
    grid-column-gap: 1vw;
    grid-template-columns: auto;
    display: -ms-grid;
    -ms-grid-row-span: 1vw;
    -ms-grid-column-span: 1vw;
    -ms-grid-template-columns: auto;
}
.col:not(.flexbox) > * {
    min-width: 0;
}
.col:not(.flexbox).col-2 {
    grid-template-columns: 50% 50%;
    -ms-grid-template-columns: 50% 50%;
}
.col:not(.flexbox).col-3 {
    grid-template-columns: 33% 33% 33%;
    -ms-grid-template-columns: 33% 33% 33%;
}
.col:not(.flexbox).col-4,
.col:not(.flexbox).col-5 {
    grid-template-columns: 25% 25% 25% 25%;
    -ms-grid-template-columns: 25% 25% 25% 25%;
}
@media screen and (max-width: 992px) {
    .col:not(.flexbox).col-5 {
        grid-template-columns: 33% 33% 33%;
        -ms-grid-template-columns: 33% 33% 33%;
    }
}
@media screen and (max-width: 690px) {
    .col:not(.flexbox) {
        grid-template-columns: 100% !important;
        -ms-grid-template-columns: 100% !important;
    }
}
@media screen and (max-width: 690px) {
    .scrolling-content {
        overflow: hidden;
        overflow-x: scroll;
        max-height: 400px;
        display: flex;
        flex-flow: row nowrap;
    }
    .scrolling-content > * {
        max-width: 85%;
        min-width: 200px !important;
    }
    .scrolling-content > :not(:first-of-type) {
        margin-left: 3vw;
    }
}
.o-section-articles .flying-picture {
    text-align: right;
}
.o-section-articles:nth-child(odd) .flying-picture {
    text-align: left;
}
.o-section-articles:nth-child(odd) .h4 {
    text-align: right;
}
@media screen and (min-width: 690px) {
    .o-section-articles:nth-child(2) .flying-picture {
        margin-top: -13vw;
    }
}
.flying-picture {
    margin: -5vw 4% -4.8vw;
    z-index: 20;
    position: relative;
}
.flying-picture img {
    max-width: 400px;
    width: 70%;
    margin-left: 4%;
    margin-right: 4%;
}
@media screen and (min-width: 690px) and (max-width: 1480px) {
    .flying-picture img {
        max-width: 300px;
        margin-top: -2vw;
    }
}
@media screen and (max-width: 690px) {
    .flying-picture {
        margin-top: 5vw;
        text-align: center !important;
    }
}
.social-icon-bar {
    display: flex;
}
.social-icon-bar > * {
    flex: 0;
    margin-right: 1vw;
}
.social-icon-bar .icon {
    font-size: 1.44rem !important;
}
.people-individual img {
    max-width: 100%;
}
@media screen and (max-width: 690px) {
    .people-individual img {
        width: 100%;
        max-height: inherit;
    }
}
.people-individual .content {
    justify-content: flex-start;
}
@media screen and (max-width: 690px) {
    .people-individual .content {
        margin-top: 7vw;
    }
}
.people-individual .content .h5 {
    color: inherit !important;
}
.crypto-page-wallets > * {
    justify-content: space-between;
}
@media screen and (max-width: 1200px) {
    .crypto-page-wallets > * br {
        display: none;
    }
}
.crypto-page-wallets img {
    margin-left: auto;
    margin-right: auto;
    max-height: 200px;
    width: 253px;
}
.introduction {
    margin-bottom: calc(max($space-lg, $spacing-lg));
    align-items: center;
}
@media (-ms-high-contrast: none), screen and (-ms-high-contrast: active) {
    .introduction {
        flex-direction: row;
    }
}
@media screen and (max-width: 768px) {
    .introduction {
        flex-direction: column;
        margin-bottom: 75px;
    }
}
.introduction > * {
    order: 2;
}
.introduction > :first-child {
    max-width: 55%;
}
@media screen and (max-width: 768px) {
    .introduction > :first-child {
        max-width: 100%;
    }
}
.introduction > .illustration {
    margin: 0 !important;
    width: 40%;
    max-width: 575px;
    order: 3;
}
@media screen and (max-width: 768px) {
    .introduction > .illustration {
        margin: 30px auto !important;
        order: 1;
        width: 90%;
    }
}
.introduction > * a[class]:not(.button) {
    display: block;
}
.introduction > * a:not[class] {
    display: inline-block;
}
@media screen and (min-width: 992px) {
    .introduction > * a.button {
        margin-bottom: 3vw;
    }
}
.introduction > * a:last-of-type {
    margin-bottom: 0;
}
@media screen and (min-width: 992px) {
    .what-else-section {
        display: flex;
    }
    .what-else-section .content {
        width: 65%;
        padding-right: 1vw;
    }
}
.button:not(:empty),
input.button {
    -webkit-appearance: none;
    appearance: none;
    display: inline-block;
    background: none;
    border-radius: 4px;
    border: 0;
    padding: 15px 30px;
    outline: none;
    font-family: Open Sans, arial, sans-serif;
    font-size: 1rem;
    font-weight: 500;
    line-height: inherit;
    cursor: pointer;
    transition: all 0.3s;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}
@media screen and (max-width: 992px) {
    .button:not(:empty),
    input.button {
        padding: 10px 18px;
    }
}
.button:not(:empty):active,
.button:not(:empty):hover,
input.button:active,
input.button:hover {
    text-decoration: none !important;
}
.button:not(:empty).primary,
input.button.primary {
    background: #41ccb4;
    color: #fff;
}
.button:not(:empty).primary:active,
.button:not(:empty).primary:hover,
input.button.primary:active,
input.button.primary:hover {
    background: #30b49d;
}
.button:not(:empty).primary.live,
input.button.primary.live {
    background: #6490f1;
}
.button:not(:empty).primary.live:active,
.button:not(:empty).primary.live:hover,
input.button.primary.live:active,
input.button.primary.live:hover {
    background: #3f75ee;
}
.button:not(:empty).primary.iot,
input.button.primary.iot {
    background: #ff9600;
}
.button:not(:empty).primary.iot:active,
.button:not(:empty).primary.iot:hover,
input.button.primary.iot:active,
input.button.primary.iot:hover {
    background: #d67e00;
}
.button:not(:empty).secondary,
input.button.secondary {
    color: #41ccb4;
}
.button:not(:empty).secondary:active,
.button:not(:empty).secondary:hover,
input.button.secondary:active,
input.button.secondary:hover {
    color: #30b49d;
}
.button:not(:empty).secondary.live,
input.button.secondary.live {
    color: #6490f1;
}
.button:not(:empty).secondary.live:active,
.button:not(:empty).secondary.live:hover,
input.button.secondary.live:active,
input.button.secondary.live:hover {
    color: #3f75ee;
}
.button:not(:empty).secondary.vault,
input.button.secondary.vault {
    color: #27d0e2;
}
.button:not(:empty).secondary.vault:active,
.button:not(:empty).secondary.vault:hover,
input.button.secondary.vault:active,
input.button.secondary.vault:hover {
    color: #1bb5c6;
}
.button:not(:empty).secondary.iot,
input.button.secondary.iot {
    color: #ff9600;
}
.button:not(:empty).secondary.iot:active,
.button:not(:empty).secondary.iot:hover,
input.button.secondary.iot:active,
input.button.secondary.iot:hover {
    color: #d67e00;
}
.button:not(:empty).outline,
input.button.outline {
    background: transparent !important;
    border: 1px solid;
    color: #41ccb4;
    padding-top: 14px;
    padding-bottom: 14px;
}
@media screen and (max-width: 992px) {
    .button:not(:empty).outline,
    input.button.outline {
        padding-top: 9px;
        padding-bottom: 9px;
    }
}
.button:not(:empty).outline:active,
.button:not(:empty).outline:hover,
input.button.outline:active,
input.button.outline:hover {
    color: #30b49d;
}
.button:not(:empty).outline.live,
input.button.outline.live {
    color: #6490f1;
    border-color: #6490f1;
}
.button:not(:empty).outline.live:active,
.button:not(:empty).outline.live:hover,
input.button.outline.live:active,
input.button.outline.live:hover {
    color: #3f75ee;
    border-color: #3f75ee;
}
.button:not(:empty).outline.vault,
input.button.outline.vault {
    color: #27d0e2;
    border-color: #27d0e2;
}
.button:not(:empty).outline.vault:active,
.button:not(:empty).outline.vault:hover,
input.button.outline.vault:active,
input.button.outline.vault:hover {
    color: #1bb5c6;
    border-color: #1bb5c6;
}
.button:not(:empty).outline.iot,
input.button.outline.iot {
    color: #ff9600;
    border-color: #ff9600;
}
.button:not(:empty).outline.iot:active,
.button:not(:empty).outline.iot:hover,
input.button.outline.iot:active,
input.button.outline.iot:hover {
    color: #d67e00;
    border-color: #d67e00;
}
.button:not(:empty).disable,
input.button.disable {
    background: #999 !important;
    cursor: auto;
    pointer-events: none;
    color: inherit;
}
@media screen and (max-width: 992px) {
    .button:not(:empty),
    .read-more,
    input.button {
        font-size: 0.875rem;
    }
}
nav ul,
nav ul li {
    margin: 0;
    padding: 0;
}
nav ul li {
    list-style: none;
}
nav ul li a,
nav ul li a:link,
nav ul li a:visited {
    color: #142533 !important;
    text-decoration: none;
}
nav ul li ul {
    margin: 0;
    padding: 0;
}
.main-navigation ul {
    font-size: 0.833rem;
    line-height: 1.4;
    font-weight: 500;
    font-family: museo-sans, Open sans, arial, sans-serif;
}
.main-navigation ul li a:link,
.main-navigation ul li a:visited {
    color: #142533;
    text-decoration: none !important;
    display: block;
    padding-top: 7px;
    padding-bottom: 7px;
}
.main-navigation ul li.has-children {
    cursor: pointer;
}
.main-navigation ul li.has-children > a {
    pointer-events: none;
}
/* .main-navigation ul li.has-children > a:after {
    content: "\e800";
    font-family: ledger-icons-font;
    display: inline-block;
    margin: 0;
    left: 7px;
    top: 1px;
    position: relative;
} */
.main-navigation ul li.has-children ul {
    text-align: left;
    width: 220px;
    max-height: 0;
    overflow: hidden;
    border-color: transparent;
    opacity: 0.5;
    transition: all 0.2s;
}
.main-navigation ul li:active > a,
.main-navigation ul li:hover > a {
    color: #41ccb4 !important;
}
.main-navigation ul li:active.has-children ul,
.main-navigation ul li:hover.has-children ul {
    opacity: 1;
    max-height: 100vh;
    overflow: visible;
}
@media screen and (min-width: 992px) {
    .main-navigation > ul {
        box-sizing: border-box;
        text-align: center;
        display: flex;
        justify-content: space-around;
        margin-left: 4%;
        margin-right: 4%;
    }
    .main-navigation > ul > li {
        position: relative;
        padding-bottom: 10px;
        padding-top: 12px;
    }
    .main-navigation > ul > li > ul {
        position: absolute;
        left: 0;
        z-index: 90;
        background: #fff;
        margin-top: 12px;
        border-radius: 4px;
    }
    .main-navigation > ul > li > ul:before {
        content: "";
        border-left: 1px solid #eee;
        border-top: 1px solid #eee;
        width: 12px;
        height: 12px;
        position: absolute;
        margin-left: 22px;
        transform: rotate(45deg);
        background: #fff;
        top: -8px;
    }
    .main-navigation > ul > li > ul li a:link,
    .main-navigation > ul > li > ul li a:visited {
        padding: 8px 28px;
    }
    .main-navigation > ul > li:hover > ul {
        border: 1px solid #eee;
        padding-top: 22px;
        padding-bottom: 22px;
    }
    .main-navigation ul li:first-child ul li:nth-last-child(2):not(:first-child):before {
        border-top: 1px solid #dcdcdc;
        width: 30px;
        height: 1px;
        margin: 18px 0 14px 30px;
        content: "";
        display: block;
    }
}
@media screen and (max-width: 992px) {
    .main-navigation {
        position: fixed;
        left: 0;
        top: 50px;
        background: #f9f9f9;
        width: 100%;
        max-height: 0;
        overflow-y: auto;
        z-index: 20;
        box-shadow: 0 5px 5px rgba(0, 0, 0, 0.1);
        box-sizing: border-box;
        transition: all 0.2s;
    }
    .main-navigation > ul {
        position: static;
        z-index: 30;
    }
    .main-navigation > ul a {
        font-size: 13px;
        font-weight: 500;
    }
    .main-navigation > ul > li {
        padding: 0 5vw !important;
        margin: 2vw 0;
    }
    .main-navigation > ul > li > ul {
        padding-left: 3vw;
    }
    .main-navigation > ul > li:hover ul {
        margin-bottom: 3vw;
    }
    .main-navigation.is-open {
        max-height: calc(100% - 50px) !important;
        padding-bottom: 5vw;
    }
    .main-navigation.is-open + #bg-menu-mobile {
        display: block !important;
    }
}
#bg-menu-mobile {
    display: none;
    visibility: none;
}
@media screen and (max-width: 992px) {
    #bg-menu-mobile {
        visibility: visible;
        background: rgba(0, 0, 0, 0.3);
        width: 100%;
        height: 100%;
        position: fixed;
        top: 64px;
        left: 0;
        z-index: 1;
        transition: all 1s;
    }
}
.footer-navigation {
    font-size: 0.833rem;
    line-height: 1.4;
    font-weight: 400;
    font-family: Open Sans, arial, sans-serif;
}
.footer-navigation ul li,
.footer-navigation ul li a:link,
.footer-navigation ul li a:visited {
    color: #142533;
}
.footer-navigation ul li a {
    padding: 0 0 7px;
    display: block;
    font-weight: 300;
}
.footer-navigation ul li > ul > li:first-child {
    margin-top: 10px;
}
@media screen and (min-width: 690px) {
    .footer-navigation ul:nth-child(2) {
        margin-top: 2vw;
    }
}
@media screen and (max-width: 690px) {
    .footer-navigation > ul,
    .footer-navigation div > ul {
        border-bottom: 1px solid #eee;
        margin: 2px 0;
        padding: 12px 0;
    }
    .footer-navigation > ul > li,
    .footer-navigation div > ul > li {
        position: relative;
    }
    .footer-navigation > ul > li:after,
    .footer-navigation div > ul > li:after {
        content: " \e804";
        font-family: ledger-icons-font;
        right: 2%;
        top: 0;
        position: absolute;
    }
    .footer-navigation > ul > li > ul,
    .footer-navigation div > ul > li > ul {
        max-height: 0;
        overflow: hidden;
        transition: all 0.3s;
    }
    .footer-navigation > ul > li:active > ul,
    .footer-navigation > ul > li:focus > ul,
    .footer-navigation > ul > li:hover > ul,
    .footer-navigation div > ul > li:active > ul,
    .footer-navigation div > ul > li:focus > ul,
    .footer-navigation div > ul > li:hover > ul {
        max-height: 100vh;
    }
}
.aside-navigation ul li {
    font-size: 0.833rem;
    line-height: 1.4;
    font-weight: 500;
    font-family: museo-sans, Open sans, arial, sans-serif;
}
.aside-navigation ul li:before {
    display: inline-block;
    vertical-align: middle;
    content: " \e802";
    font-family: ledger-icons-font;
    color: #999;
    margin-right: 0.5vw;
}
@media screen and (min-width: 1200px) {
    .aside-navigation ul li {
        padding: 0 0 1vw;
    }
}
@media screen and (max-width: 1200px) {
    .aside-navigation ul li {
        padding: 0 0 2vw;
    }
}
#pagination ul {
    margin: 0;
    text-align: center;
}
#pagination ul li {
    display: inline-block;
    vertical-align: top;
    margin: 0 2px;
    border-radius: 100%;
    width: 32px;
    height: 32px;
    transition: all 0.2s;
}
#pagination ul li > * {
    display: block;
    color: #999;
    text-align: center;
    font-size: 0.833rem;
    line-height: 32px;
    font-weight: 500;
    font-family: Open Sans, arial, sans-serif;
    text-decoration: none;
    width: 100%;
    height: 100%;
    border-radius: 100%;
}
#pagination ul li > a {
    background: #eee;
}
#pagination ul li.current-page,
#pagination ul li > a:hover {
    background: #41ccb4;
}
#pagination ul li.current-page,
#pagination ul li.current-page > *,
#pagination ul li > a:hover,
#pagination ul li > a:hover > * {
    color: #fff;
}
#pagination ul li.next-page,
#pagination ul li.prev-page {
    margin: 0 3vw;
}
#pagination ul li.next-page > :before {
    content: "\e802";
    font-family: ledger-icons-font;
}
#pagination ul li.prev-page > :before {
    content: "\e803";
    font-family: ledger-icons-font;
}
@media screen and (max-width: 690px) {
    #pagination ul li {
        margin-bottom: 3vw;
    }
}
.simple-pagination {
    display: flex;
    justify-content: center;
    margin-top: 75px;
}
.simple-pagination * {
    min-width: 25px;
    margin: 2px 5px;
    font-size: 16px;
    display: inline-block;
    vertical-align: middle;
    transition: all 0.3s;
}
.simple-pagination * > * {
    cursor: pointer;
}
.simple-pagination .next:hover,
.simple-pagination .previous:hover,
.simple-pagination [data-active="active"] {
    color: #41ccb4;
}
.simple-pagination i {
    font-size: 12px;
}
.simple-pagination .next,
.simple-pagination .previous {
    display: block;
}
#loader-list .caption {
    font-style: italic;
    letter-spacing: 1px;
    color: #ccc;
    position: relative;
    top: -30px;
    background: #f9f9f9;
    border-radius: 4px;
    padding: 15px 32px;
}
.fade-in {
    animation: fadeIn 1.5s ease;
    -webkit-animation: fadeIn 1.5s ease;
    -moz-animation: fadeIn ease 1.5s;
    -o-animation: fadeIn ease 1.5s;
    -ms-animation: fadeIn ease 1.5s;
}
@keyframes fadeIn {
    0% {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
@-moz-keyframes fadeIn {
    0% {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
@-webkit-keyframes fadeIn {
    0% {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
@-o-keyframes fadeIn {
    0% {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
@-ms-keyframes fadeIn {
    0% {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
.fade-out {
    animation: fadeOut 2s ease;
    -webkit-animation: fadeOut 2s ease;
    -moz-animation: fadeOut ease 2s;
    -o-animation: fadeOut ease 2s;
    -ms-animation: fadeOut ease 2s;
}
@keyframes fadeOut {
    0% {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}
@-moz-keyframes fadeOut {
    0% {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}
@-webkit-keyframes fadeOut {
    0% {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}
@-o-keyframes fadeOut {
    0% {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}
@-ms-keyframes fadeOut {
    0% {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}
@keyframes balancedEffect {
    0% {
        transform: rotate(0);
    }
    50% {
        transform: rotate(20deg);
    }
    to {
        transform: rotate(0deg);
    }
}
.balanced-effect {
    animation: balancedEffect 2s ease;
    -webkit-animation: balancedEffect 2s ease;
    -moz-animation: balancedEffect ease 2s;
    -o-animation: balancedEffect ease 2s;
    -ms-animation: balancedEffect ease 2s;
}
.ledger-animation {
    opacity: 0;
}
@keyframes revealAnimation {
    0% {
        opacity: 0;
        transform: translateY(80px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
.reveal-loaded {
    animation: revealAnimation 1.2s cubic-bezier(0.5, 0, 0, 1) both;
}
.table-flex {
    max-width: 1130px;
    margin-left: auto;
    margin-right: auto;
}
@media screen and (max-width: 690px) {
    .table-flex {
        margin-left: 4%;
        margin-right: 4%;
    }
}
.table-flex > * {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
}
@media screen and (max-width: 690px) {
    .table-flex > * {
        display: block;
    }
}
.table-flex > * > * {
    padding: 1vw;
    order: 2;
    box-sizing: initial;
}
@media screen and (min-width: 690px) {
    .table-flex > * > * {
        padding-top: 0;
    }
}
.table-flex > * > :first-of-type {
    padding-left: 0;
}
.table-flex > * > :last-of-type {
    padding-right: 0;
}
.table-flex > * .read-more {
    display: block;
}
.table-flex > :last-of-type {
    order: 1;
}
@media screen and (min-width: 690px) {
    .table-flex .flex-1 {
        width: 9%;
        max-width: 60px;
        text-align: center;
    }
    .table-flex .flex-1.toggle-btn {
        width: 5%;
        max-width: 20px;
        padding: 0.5vw;
    }
    .table-flex > :last-of-type {
        order: 8;
    }
}
.table-flex .thead {
    font-weight: 500;
    color: #142533;
    font-size: 1.1875rem;
    font-family: museo-sans, Open sans, arial, sans-serif;
    margin-bottom: 3vw;
}
.table-flex .name {
    display: flex;
    align-items: center;
}
.table-flex .name .crypto {
    display: inline-block;
}
@media screen and (min-width: 690px) and (max-width: 992px) {
    .table-flex .name .crypto {
        width: 100%;
        max-width: 90px;
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
    }
}
.table-flex .name img {
    margin-right: 22px;
    max-width: 23px;
}
.table-flex .level {
    font-size: 0.833rem;
    margin: 0 4px 8px 0;
}
.table-flex .icon-plus {
    font-weight: 500;
    color: #142533;
    font-size: 1.1875rem;
    outline: none;
    -o-user-select: none;
    user-select: none;
    -webkit-tap-highlight-color: transparent;
}
@media screen and (min-width: 691px) {
    .table-flex .name {
        width: 20%;
    }
    .table-flex .description {
        width: 35%;
        max-width: 460px;
    }
    .table-flex .description p {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
    .table-flex .description p.show-all {
        -webkit-line-clamp: inherit;
    }
    .table-flex .supported {
        width: 25%;
    }
}
.table-flex .tcorpus {
    margin-bottom: 2vw;
    position: relative;
}
@media screen and (max-width: 690px) {
    .table-flex .tcorpus {
        margin-top: 5vw;
        padding-bottom: 5vw;
    }
    .table-flex .tcorpus:not(:last-of-type) {
        border-bottom: 1px solid #d8d8d8;
    }
    .table-flex .tcorpus > :not(.name):not(.toggle-btn) {
        margin-left: 50px;
        border-top: 1px solid #eee;
        padding: 5vw 0 2vw;
        margin-top: 2vw;
    }
    .table-flex .tcorpus > :not(.name):not(.toggle-btn):not(.is-visible) {
        display: none;
    }
    .table-flex .tcorpus > :not(.name):not(.toggle-btn):last-of-type {
        border: 0;
    }
}
@media screen and (min-width: 690px) {
    .table-flex .tcorpus > :not(.name):not(.toggle-btn) {
        display: block !important;
    }
}
.table-flex .tcorpus .toggle-btn {
    cursor: pointer;
}
@media screen and (max-width: 690px) {
    .table-flex .tcorpus .toggle-btn {
        position: absolute;
        right: 0;
        top: 8px;
    }
}
.crypto-assets {
    width: 100%;
    max-width: 1130px;
    margin-left: auto;
    margin-right: auto;
}
@media screen and (max-width: 767px) {
    .crypto-assets,
    .crypto-assets tbody {
        display: block;
    }
    .crypto-assets tr {
        padding: 1vw 0 5vw;
        display: block;
        position: relative;
        width: 100%;
    }
}
.crypto-assets td {
    padding: 1vw 0.5vw;
    box-sizing: initial;
    position: relative;
}
.crypto-assets td.name span {
    display: block;
}
@media screen and (max-width: 767px) {
    .crypto-assets td {
        text-align: left;
        display: block;
        padding: 2vw 1vw;
    }
    .crypto-assets td:not(:first-of-type):not(:last-of-type) {
        padding-left: 28px;
    }
    .crypto-assets td.name span {
        display: inline-block;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        max-width: 50%;
    }
    .crypto-assets td[class] .icon {
        float: right;
    }
}
.crypto-assets td img {
    margin: 6px 10px 25px 0;
    width: 13px;
    float: left;
}
@media screen and (max-width: 767px) {
    .crypto-assets td img {
        display: inline-block;
        vertical-align: middle;
        float: none;
        margin: -12px 12px 0 0;
    }
}
.crypto-assets td .read-more {
    font-size: 0.875rem;
}
@media screen and (max-width: 767px) {
    .crypto-assets td .read-more {
        float: right;
    }
}
.crypto-assets .thead > * {
    font-weight: 500;
    color: #142533;
    font-size: 1.1875rem;
    font-family: museo-sans, Open sans, arial, sans-serif;
    padding-bottom: 2vw;
    text-align: left;
    position: relative;
    text-align: center;
    width: 12%;
}
@media screen and (max-width: 992px) {
    .crypto-assets .thead > * {
        font-size: 0.875rem;
        padding-left: 1vw;
        padding-right: 1vw;
    }
}
.crypto-assets .thead > :first-of-type {
    width: 33%;
    text-align: left;
    padding-left: 1vw;
}
@media screen and (max-width: 1115px) {
    .crypto-assets .thead > :first-of-type {
        width: 27%;
    }
}
.crypto-assets .thead > :last-of-type {
    width: auto;
    text-align: left;
    padding-left: 1vw;
}
@media screen and (max-width: 767px) {
    .crypto-assets .thead {
        display: none;
    }
}
.sub-table {
    border-bottom: 1px solid #d8d8d8;
    color: #999;
    padding-bottom: 1vw;
    margin-bottom: 3vw;
    max-width: 1130px;
    margin-left: auto;
    margin-right: auto;
    flex-direction: row;
}
@media screen and (max-width: 690px) {
    .sub-table {
        flex-direction: column;
        margin-left: -3%;
        margin-right: -3%;
    }
}
.sub-table > * {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex-wrap: wrap;
}
.sub-table input {
    display: none;
}
.sub-table input:checked ~ label {
    color: #41ccb4;
    font-weight: 500;
}
.sub-table label {
    cursor: pointer;
    margin: 0 12px;
}
@media screen and (min-width: 690px) {
    .sub-table label {
        padding: 2px;
    }
}
@media screen and (max-width: 690px) {
    .sub-table .type i {
        display: block;
    }
    .sub-table .type span {
        display: none;
    }
}
.sub-table .filter-live {
    position: relative;
}
@media screen and (min-width: 992px) {
    .sub-table .filter-live {
        padding-left: 1vw;
        margin-left: 1vw;
        border-left: 1px solid #d8d8d8;
    }
}
@media screen and (max-width: 690px) {
    .sub-table .filter-live {
        margin-top: 2vw;
    }
    .sub-table .filter-live label {
        margin-left: 0;
    }
}
.sub-table .filter-live .toggle {
    display: inline-block;
    vertical-align: middle;
    position: relative;
    border: 2px solid #999;
    border-radius: 12px;
    width: 29px;
    height: 21px;
    margin: 0 7px 0 0;
}
.sub-table .filter-live .toggle:after {
    content: "";
    background: #999;
    border-radius: 100%;
    width: 11px;
    height: 11px;
    position: absolute;
    top: 3px;
    left: 3px;
    transition: all 0.2s;
}
.sub-table .filter-live input:checked ~ label .toggle {
    border-color: #41ccb4;
}
.sub-table .filter-live input:checked ~ label .toggle:after {
    left: 11px;
    background: #41ccb4;
}
.simple-lines {
    display: flex;
    justify-content: flex-start;
    border: 1px solid #d8d8d8;
    border-radius: 4px;
    padding: 12px 15px;
    margin-bottom: 15px;
    align-items: center;
}
@media screen and (max-width: 690px) {
    .simple-lines {
        margin-top: 15px;
        margin-bottom: 0;
        align-items: center !important;
        text-align: center;
    }
}
@media screen and (max-width: 960px) {
    .simple-lines {
        flex-direction: column;
        align-items: flex-start;
    }
}
.simple-lines > * {
    font-size: 0.875rem;
}
.simple-lines > :not(:last-child) {
    padding-right: 2vw;
    margin: 0;
}
@media screen and (max-width: 960px) {
    .simple-lines > :not(:last-child) {
        padding-right: 0;
        padding-bottom: 15px;
    }
}
@media screen and (min-width: 992px) {
    .simple-lines > :last-child {
        margin-left: auto;
    }
}
.simple-lines > .title {
    display: flex;
    align-items: center;
    min-width: 100px;
}
.simple-lines > .read-more,
.simple-lines > .title {
    flex: none;
}
.simple-lines > * .fal {
    color: #41ccb4;
    font-size: 22px;
    padding-right: 10px;
}
.gridbox {
    display: grid;
}
.gridbox.col-2 {
    grid-template-columns: repeat(auto-fit, minmax(45%, 1fr));
    column-gap: calc(max(4.5vw, 30px));
    row-gap: calc(max(3vw, 30px));
}
@media screen and (max-width: 768px) {
    .gridbox.col-2 {
        grid-template-columns: repeat(1, minmax(100%, 1fr));
    }
}
.gridbox.col-3 {
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 30px;
    grid-auto-rows: minmax(200px, auto);
}
.gridbox.col-4 {
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    grid-gap: 30px;
    grid-auto-rows: minmax(100px, auto);
}
.crypto-gallery .grid-items {
    margin-left: 3%;
    margin-right: 3%;
    margin-bottom: 1vw;
    justify-content: flex-start;
}
@media screen and (min-width: 690px) {
    .crypto-gallery .grid-items {
        margin-left: 2%;
        margin-right: 2%;
    }
}
.crypto-gallery .grid-items > * {
    min-height: 66px;
    cursor: pointer;
    color: #999;
    display: block;
    text-decoration: none;
    min-width: 16% !important;
    margin-left: 0;
    margin-right: 0;
    text-align: center;
}
@media screen and (max-width: 690px) {
    .crypto-gallery .grid-items > * {
        min-width: 25% !important;
    }
}
.crypto-gallery .grid-items > * span {
    display: none;
}
.crypto-gallery .grid-items > * img {
    max-width: 33px;
    max-height: 33px;
    transition: all 0.4s;
    display: block;
    margin: 0 auto 10px;
}
@media screen and (max-width: 690px) {
    .crypto-gallery .grid-items > * img {
        max-width: 25px;
        max-height: 25px;
    }
}
.crypto-gallery .grid-items > :hover {
    background: none !important;
}
.crypto-gallery .grid-items > :hover img {
    filter: brightness(0);
}
.crypto-gallery .grid-items > :hover span {
    display: block;
}
.crypto-gallery .title {
    margin-left: 7.8%;
    margin-bottom: 45px;
}
.crypto-gallery > .bg {
    padding-top: 75px;
    padding-bottom: 75px;
}
@media screen and (max-width: 690px) {
    .crypto-gallery > .bg {
        margin-left: -3%;
        margin-right: -3%;
        padding-top: 45px;
        padding-bottom: 45px;
    }
    .crypto-gallery > .bg .title {
        margin-bottom: 30px;
    }
}
.crypto-gallery .align-right {
    margin-right: 7.8%;
    margin-left: 7.8%;
}
@media screen and (max-width: 690px) {
    .crypto-gallery .align-right {
        text-align: left !important;
    }
}
.c-scrolling-zone {
    position: relative;
    padding-top: 5%;
}
@media screen and (min-width: 860px) {
    .c-scrolling-zone {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        justify-content: stretch;
    }
}
.c-scrolling-zone > .scroll-content {
    width: 94%;
    display: flex;
    flex-direction: column;
    align-items: flex-end;
}
@media screen and (min-width: 861px) {
    .c-scrolling-zone > .scroll-content {
        width: 34%;
        margin-left: auto;
    }
}
.c-scrolling-zone .fixed-area {
    background: #f3f3f3;
    height: 104%;
    width: 40%;
    max-width: 618px;
    position: absolute;
    top: 0;
    margin-left: auto;
    margin-right: auto;
    padding: 7% 0 5% 7%;
}
@media screen and (max-width: 860px) {
    .c-scrolling-zone .fixed-area {
        z-index: 1;
        background: transparent;
    }
}
.c-scrolling-zone .fixed-area > div {
    max-width: 600px;
    width: 140%;
    position: sticky;
    position: -webkit-sticky;
    position: -moz-sticky;
    position: -ms-sticky;
    position: -o-sticky;
    transition: all 0.3s;
    height: 377px;
    top: 21%;
    box-shadow: 0 0 0 !important;
}
.c-scrolling-zone .fixed-area > div img {
    box-shadow: -10px 10px 48px rgba(0, 0, 0, 0.1);
}
@media screen and (max-width: 860px) {
    .c-scrolling-zone .fixed-area > div img {
        visibility: hidden;
        display: none;
    }
}
.c-scrolling-zone .fixed-area > div .scroll-bullets {
    position: absolute;
    top: 4.3vw;
    left: -8%;
    display: flex;
    justify-content: center;
    flex-direction: column;
    height: 50%;
    width: 20px;
}
@media screen and (max-width: 992px) {
    .c-scrolling-zone .fixed-area > div .scroll-bullets {
        left: -9%;
    }
}
.c-scrolling-zone .fixed-area > div .scroll-bullets > * {
    cursor: pointer;
    display: block;
    border-radius: 100%;
    border: 1px solid #41ccb4;
    width: 8px;
    height: 8px;
    margin-left: auto;
    margin-right: auto;
}
.c-scrolling-zone .fixed-area > div .scroll-bullets > :not(:last-of-type) {
    margin-bottom: 15px;
}
.c-scrolling-zone .fixed-area > div .scroll-bullets > .active {
    background-color: #41ccb4;
}
.c-scrolling-zone.fix-on-right .fixed-area {
    left: auto;
}
.c-scrolling-zone.fix-on-right > .scroll-content {
    margin-left: 7%;
}
@media screen and (max-width: 992px) {
    .c-scrolling-zone.fix-on-right > .scroll-content {
        margin-left: 5%;
    }
}
.c-scrolling-zone .bloc-item {
    position: relative;
    flex-wrap: nowrap;
    max-width: 100%;
    flex: none;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}
@media screen and (min-width: 861px) {
    .c-scrolling-zone .bloc-item {
        max-width: 420px;
        min-height: 400px;
        background: none !important;
        justify-content: center;
    }
    .c-scrolling-zone .bloc-item > * {
        flex: none;
        max-width: 100%;
    }
    .c-scrolling-zone .bloc-item .target {
        top: -25px;
    }
}
@media screen and (max-width: 860px) {
    .c-scrolling-zone .bloc-item {
        width: 100%;
        height: auto;
        margin: 0 auto 75px;
    }
    .c-scrolling-zone .bloc-item > * {
        padding-left: 12%;
    }
    .c-scrolling-zone .bloc-item .mobile-img {
        display: block !important;
        visibility: visible !important;
        max-width: 112%;
        background: #f3f3f3;
        margin: 0 -6% 30px !important;
        padding: 20px 20px 20px 18% !important;
    }
    .c-scrolling-zone .bloc-item .mobile-img img {
        display: block;
        float: right;
        margin: 0 6% 0 0 !important;
        max-width: 95%;
        box-shadow: -10px 10px 40px rgba(0, 0, 0, 0.1);
    }
    .c-scrolling-zone .bloc-item .h3 {
        margin-bottom: 5px !important;
    }
    .c-scrolling-zone .bloc-item .target {
        top: -100px;
    }
}
.pop-modal {
    position: fixed;
    background: rgba(0, 0, 0, 0.5);
    width: 100%;
    height: 100%;
    z-index: 100;
    top: 0;
    bottom: 0;
    left: 0;
    justify-content: center;
    align-items: center;
    display: none;
    animation-duration: 0.4s;
    animation-name: fadeIn;
    animation-timing-function: ease;
    animation-iteration-count: 1;
}
.pop-modal.active {
    display: flex;
}
.pop-modal .close-pop-modal {
    cursor: pointer;
    position: absolute;
    right: 10%;
    top: 2%;
    padding: 10px 8px 5px;
    color: #fff;
    z-index: 999;
    border-radius: 100%;
    background: rgba(0, 0, 0, 0.6);
}
.pop-modal .close-pop-modal > * {
    margin: auto;
    font-size: 32px;
    font-weight: 100;
}
.pop-modal .content {
    display: block;
    background: #fff;
    border-radius: 4px;
    width: 80%;
    height: 80%;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.8);
}
.pop-modal .content.full-screen {
    width: 100%;
    height: 100%;
    min-height: 100%;
}
.pop-modal .content.full-screen + .close-pop-modal {
    right: 5%;
    top: 5%;
}
.open-pop-modal:not(.button) {
    cursor: pointer;
    color: #41ccb4 !important;
}
.organism-bloc-warning {
    padding: 12px 30px;
}
.organism-bloc-warning .fal,
.organism-bloc-warning img {
    font-size: 1.1875rem;
}
@media screen and (min-width: 690px) {
    .organism-bloc-warning .fal,
    .organism-bloc-warning img {
        display: block;
        padding-right: 5px;
    }
}
.organism-bloc-warning .content {
    align-items: center;
    font-size: 12px;
    color: #d8d8d8;
}
@media screen and (min-width: 768px) {
    .organism-bloc-warning .content {
        display: flex;
    }
    .organism-bloc-warning .content br {
        display: none;
    }
}
.organism-bloc-warning .content > * {
    margin-top: 3px;
    margin-bottom: 3px;
    font-size: 12px;
    line-height: 1.4;
}
@media screen and (min-width: 768px) {
    .organism-bloc-warning .content > * {
        margin-left: 10px;
        margin-right: 10px;
    }
}
.organism-bloc-warning .content a {
    margin-left: auto;
    color: #fff;
    font-size: 0.875rem;
}
.organism-bloc-warning .content .title {
    font-size: 0.875rem;
    color: #fff;
}
.organism-bloc-warning.bg-dark a:link,
.organism-bloc-warning.bg-dark a:visited {
    text-decoration: underline;
    color: #fff;
    font-size: 0.875rem;
}
.scrolling-area {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}
@media screen and (min-width: 768px) {
    .scrolling-area {
        flex-direction: row;
    }
}
@media screen and (min-width: 768px) {
    .scrolling-area > * {
        max-width: 510px;
        width: 50%;
    }
}
.scrolling-area .fixed-area {
    margin-right: 0;
}
@media screen and (min-width: 768px) {
    .scrolling-area .fixed-area {
        margin-right: 3%;
    }
}
.scrolling-area .fixed-area > * {
    position: sticky;
    top: 125px;
    z-index: 2;
    margin-bottom: 45px;
}
@media screen and (min-width: 768px) {
    .scrolling-area .scroller-text-items {
        margin-left: 3%;
    }
}
.scrolling-area .scroller-text-items > .item {
    transition: opacity 0.05s;
    padding-bottom: 45px;
}
.scrolling-area .scroller-text-items > .item:not(:last-of-type) {
    border-bottom: 1px solid #d8d8d8;
}
@media screen and (min-width: 768px) {
    .scrolling-area .scroller-text-items > .item:not(.active) {
        opacity: 0.3;
    }
}
.more-about {
    display: flex;
    justify-content: space-between;
}
@media screen and (max-width: 690px) {
    .more-about {
        flex-direction: column;
    }
}
@media screen and (min-width: 690px) {
    .more-about > * {
        width: 53%;
    }
}
.more-about > :not(.academy-lines) {
    margin-bottom: 30px;
}
@media screen and (min-width: 690px) {
    .more-about > :not(.academy-lines) {
        width: 40%;
        margin-bottom: 0;
    }
}
.more-about .academy-lines > * {
    border: 1px solid #d8d8d8;
    border-radius: 4px;
    padding: 15px;
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start;
}
@media screen and (max-width: 690px) {
    .more-about .academy-lines > * {
        flex-direction: column;
    }
}
@media screen and (min-width: 690px) {
    .more-about .academy-lines > * {
        padding: 30px;
        align-items: center;
    }
}
.more-about .academy-lines > * img {
    margin-right: 30px;
}
@media screen and (max-width: 690px) {
    .more-about .academy-lines > * img {
        margin: 0 auto 30px;
    }
}
.more-about .academy-lines > :not(:last-of-type) {
    margin-bottom: 15px;
}
.product-slider-with-tab {
    position: relative;
}
.product-slider-with-tab .tab {
    margin-bottom: 15px;
}
.product-slider-with-tab .tab .swiper-wrapper {
    display: flex;
    flex-flow: row nowrap;
    max-width: 100%;
    width: auto;
}
@media screen and (max-width: 690px) {
    .product-slider-with-tab .tab .swiper-wrapper {
        min-width: auto;
    }
}
.product-slider-with-tab .tab .swiper-wrapper > * {
    height: auto;
    text-align: left;
    cursor: pointer;
    padding-top: 5px;
    padding-bottom: 5px;
    border-bottom: 3px solid;
}
@media screen and (max-width: 768px) {
    .product-slider-with-tab .tab .swiper-wrapper > * {
        font-size: 0.833rem;
    }
}
.product-slider-with-tab .tab .swiper-wrapper > :not(.swiper-slide-thumb-active) {
    color: #999;
}
.product-slider-with-tab .gallery-bottom .swiper-slide {
    font-size: 18px;
    padding: 4vw 7vw 4vw 6vw;
    background: #f3f3f3;
    border-radius: 4px;
    width: 76%;
    height: auto;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    font-size: 1rem;
    color: #565656;
}
@media screen and (max-width: 992px) {
    .product-slider-with-tab .gallery-bottom .swiper-slide {
        font-size: 0.875rem;
        width: 88.5%;
    }
}
@media screen and (max-width: 690px) {
    .product-slider-with-tab .gallery-bottom .swiper-slide {
        flex-direction: column;
        width: 76%;
    }
    .product-slider-with-tab .gallery-bottom .swiper-slide h3 {
        font-size: 1.44rem;
    }
}
.product-slider-with-tab .gallery-bottom .swiper-slide img {
    margin-right: 2vw;
    max-width: 300px;
}
@media screen and (max-width: 690px) {
    .product-slider-with-tab .gallery-bottom .swiper-slide img {
        width: 70%;
        margin: 15px 0;
    }
}
@media screen and (max-width: 690px) {
    .product-slider-with-tab .gallery-bottom .steps {
        font-size: 0.875rem;
    }
}
.product-slider-with-tab .gallery-bottom .steps span {
    color: #999;
}
.product-slider-with-tab .bottom {
    display: flex;
    justify-content: space-between;
}
@media screen and (min-width: 690px) {
    .product-slider-with-tab .bottom {
        align-items: center;
    }
}
@media screen and (max-width: 690px) {
    .product-slider-with-tab .bottom {
        flex-direction: column;
        margin-top: -15px;
    }
}
.product-slider-with-tab .bottom > * {
    order: 3;
    flex: 1;
}
.product-slider-with-tab .swiper-controller {
    width: 40%;
    order: 4;
    text-align: right;
    width: 50%;
}
@media screen and (max-width: 690px) {
    .product-slider-with-tab .swiper-controller {
        order: 1;
        align-self: flex-end;
        width: 92%;
    }
}
.product-slider-with-tab .swiper-controller .swiper-next,
.product-slider-with-tab .swiper-controller .swiper-prev {
    cursor: pointer;
    outline: none;
    content: "";
    left: 0;
    right: 0;
    position: relative;
    width: auto;
    height: auto;
    padding: 10px 6px;
    background: none;
    display: inline-block;
    vertical-align: middle;
    margin: 0 3px;
    color: #142533;
    font-family: Font Awesome\5 Pro;
}
.product-slider-with-tab .swiper-controller .swiper-next.swiper-button-disabled,
.product-slider-with-tab .swiper-controller .swiper-next.swiper-disabled,
.product-slider-with-tab .swiper-controller .swiper-prev.swiper-button-disabled,
.product-slider-with-tab .swiper-controller .swiper-prev.swiper-disabled {
    color: #999;
}
.product-slider-with-tab .swiper-controller .swiper-next:after {
    content: "\f178";
}
.product-slider-with-tab .swiper-controller .swiper-prev:after {
    content: "\f177";
}
@media screen and (max-width: 767px) {
    .double-blocks-background {
        flex-direction: column-reverse;
    }
}
.double-blocks-background > * {
    width: 100%;
    background-color: #f3f3f3;
    padding: 30px;
    flex: 1;
    transition: all 0.3s;
}
@media screen and (min-width: 1180px) {
    .double-blocks-background > * {
        padding: 70px;
    }
}
@media screen and (max-width: 690px) {
    .double-blocks-background > * {
        padding: 45px 25px;
    }
}
.double-blocks-background .illustration-block {
    background-color: #e8eaec;
    padding: 30px;
    text-align: center;
    overflow: hidden;
    position: relative;
    display: flex;
    align-items: flex-end;
    justify-content: center;
}
.preview-on-click-block {
    display: flex;
    justify-content: space-between;
    transition: all 0.3s;
}
@media screen and (min-width: 768px) and (max-width: 1100px) {
    .preview-on-click-block {
        align-items: center;
    }
}
@media screen and (max-width: 767px) {
    .preview-on-click-block {
        flex-direction: column;
        padding-left: 2%;
        padding-right: 2%;
    }
}
@media screen and (min-width: 768px) {
    .preview-on-click-block > * {
        width: 38%;
    }
}
@media screen and (min-width: 768px) and (max-width: 1100px) {
    .preview-on-click-block > * {
        width: 32%;
    }
}
@media screen and (min-width: 768px) {
    .preview-on-click-block .content {
        width: 60%;
    }
}
.preview-on-click-block .content .flexbox {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    flex-wrap: wrap;
    color: #999;
}
.preview-on-click-block .content .flexbox > * {
    cursor: pointer;
    width: 100%;
    flex: none;
    transition: all 0.3s;
}
@media screen and (max-width: 768px) {
    .preview-on-click-block .content .flexbox > :not(:last-of-type) {
        margin-bottom: 45px;
    }
}
@media screen and (min-width: 768px) {
    .preview-on-click-block .content .flexbox > * {
        width: 45%;
        margin-bottom: 75px;
        font-size: 16px;
    }
    .preview-on-click-block .content .flexbox > :not(.active) {
        filter: grayscale(1);
        opacity: 0.5;
    }
    .preview-on-click-block .content .flexbox > :not(.active):hover {
        filter: grayscale(0);
        opacity: 1;
    }
}
.preview-on-click-block .content .flexbox > * .mobile-illustration {
    display: none;
}
@media screen and (max-width: 767px) {
    .preview-on-click-block .content .flexbox > * .mobile-illustration {
        display: block;
        max-width: 70%;
        margin: 30px auto 0;
    }
}
.preview-on-click-block .content .flexbox > * p:first-of-type {
    margin-bottom: 5px;
}
.preview-on-click-block .illustration {
    position: relative;
    text-align: center;
}
@media screen and (max-width: 767px) {
    .preview-on-click-block .illustration {
        display: none;
    }
}
@font-face {
    font-family: ledger-icons-font;
    src: url(../fonts/ledger-icons-fontf03e.html?11655333);
    src: url(../fonts/ledger-icons-fontf03e.html?11655333#iefix) format("embedded-opentype"),
        url(../fonts/ledger-icons-fontf03e-2.html?11655333) format("woff2"),
        url(../fonts/ledger-icons-fontf03e-3.html?11655333) format("woff"),
        url(../fonts/ledger-icons-fontf03e-4.html?11655333) format("truetype"),
        url(../fonts/ledger-icons-fontf03e-5.html?11655333#ledger-icons-font) format("svg");
    font-weight: 400;
    font-style: normal;
}
[class*=" icon-"]:before,
[class^="icon-"]:before {
    font-family: ledger-icons-font;
    font-style: normal;
    font-weight: 400;
    speak: none;
    display: inline-block;
    text-decoration: inherit;
    width: 1em;
    margin-right: 0.2em;
    text-align: center;
    font-variant: normal;
    text-transform: none;
    line-height: 1em;
    margin-left: 0.2em;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}
.icon-angle_down:before {
    content: "\e800";
}
.icon-angle_up:before {
    content: "\e801";
}
.icon-angle_right:before {
    content: "\e802";
}
.icon-angle_left:before {
    content: "\e803";
}
.icon-plus:before {
    content: "\e804";
}
.icon-minus:before {
    content: "\e805";
}
.icon-times:before {
    content: "\e806";
}
.icon-check:before {
    content: "\e807";
}
.icon-asterisk:before {
    content: "\e808";
}
.icon-shopping_cart:before {
    content: "\e809";
}
.icon-bars:before {
    content: "\e80a";
}
.icon-long_arrow_right:before {
    content: "\e80b";
}
.icon-star-border:before {
    content: "\e80c";
}
.icon-star:before {
    content: "\e80d";
}
.icon-star_half:before {
    content: "\e80e";
}
/* .icon-github:before {
    content: "\e80f";
}
.icon-twitter:before {
    content: "\e810";
}
.icon-youtube:before {
    content: "\e811";
}
.icon-linkedin:before {
    content: "\e812";
}
.icon-facebook:before {
    content: "\e813";
} */
.icon-bluetooth:before {
    content: "\e814";
}
.icon-ledger_live:before {
    content: "\e815";
}
.icon-history:before {
    content: "\e816";
}
.icon-plane:before {
    content: "\e817";
}
.icon-undo:before {
    content: "\e818";
}
.icon-lock:before {
    content: "\e819";
}
.icon-comment:before {
    content: "\e81a";
}
.icon-shield:before {
    content: "\e81b";
}
.icon-currencies:before {
    content: "\e81c";
}
.icon-check_light:before {
    content: "\e81d";
}
.icon-nano_screen:before {
    content: "\e81e";
}
.icon-nano_buttons:before {
    content: "\e81f";
}
.icon-desktop:before {
    content: "\e820";
}
.icon-shield_check:before {
    content: "\e821";
}
.icon-chess_rook:before {
    content: "\e822";
}
.icon-microchip:before {
    content: "\e823";
}
.icon-devices_ledger:before {
    content: "\e824";
}
.icon-exchange:before {
    content: "\e825";
}
.icon-chart_line:before {
    content: "\e826";
}
.icon-search:before {
    content: "\e827";
}
.icon-wrench:before {
    content: "\e828";
}
.icon-vault:before {
    content: "\e829";
}
.icon-flag:before {
    content: "\e82a";
}
.icon-wallet:before {
    content: "\e82b";
}
.icon-link:before {
    content: "\e82c";
}
.icon-counter:before {
    content: "\e82d";
}
.icon-sitemap:before {
    content: "\e82e";
}
.icon-groupapproval:before {
    content: "\e82f";
}
.icon-timelock:before {
    content: "\e830";
}
.icon-listvalidation:before {
    content: "\e831";
}
.icon-doublecheck:before {
    content: "\e832";
}
.icon-dsense:before {
    content: "\e833";
}
.icon-senseigateway:before {
    content: "\e834";
}
.icon-sensei:before {
    content: "\e835";
}
.icon-esense:before {
    content: "\e836";
}
.icon-coins:before {
    content: "\e837";
}
.icon-medium:before {
    content: "\e838";
}
.icon-nanox:before {
    content: "\e839";
}
.icon-nanos:before {
    content: "\e83a";
}
.icon-metamask-picto:before {
    content: "\e83b";
}
.icon-reddit:before {
    content: "\e83c";
}
.icon-insta:before {
    content: "\e83d";
}
.icon-cog:before {
    content: "\e83e";
}
.icon-laptopphone:before {
    content: "\e83f";
}
.icon-clipboard-list-check:before {
    content: "\e840";
}
.icon-users:before {
    content: "\e841";
}
.icon-windows:before {
    content: "\e842";
}
.icon-linux:before {
    content: "\e843";
}
.icon-apple:before {
    content: "\e844";
}
.icon-user-check:before {
    content: "\e84a";
}
.icon-user:before {
    content: "\e84b";
}
.icon-chainr:before {
    content: "\e84c";
}
.icon-shieldr:before {
    content: "\e84e";
}
.icon-walletr:before {
    content: "\e84f";
}
.icon-graduationr:before {
    content: "\e850";
}
.icon-coinr:before {
    content: "\e851";
}
html {
    scroll-behavior: smooth;
}
body {
    background: #f9f9f9;
    font-size: inherit;
    line-height: 1.6;
    font-weight: 500;
    font-family: Open Sans, arial, sans-serif;
    color: #565656;
    counter-reset: section;
}
@media screen and (max-width: 768px) {
    body {
        font-size: 14px;
    }
}
@media screen and (min-width: 768px) {
    body {
        font-size: 16px;
    }
}
img {
    max-width: 100%;
}
* {
    box-sizing: border-box;
}
#main:not(.flexbox) {
    display: block;
}
@media screen and (min-width: 992px) {
    #main {
        margin-top: calc(8vw + 90px);
    }
}
@media screen and (max-width: 992px) {
    #main {
        margin-top: 82px;
    }
}
#main.no-top-spacing {
    margin-top: 90px;
}
@media screen and (max-width: 992px) {
    #main.no-top-spacing {
        margin-top: 64px;
    }
}
.what-is-crypto .coinmarketcap-currency-widget {
    max-width: 400px;
    width: 90%;
    flex: none;
}
@media screen and (min-width: 768px) {
    .what-is-crypto .coinmarketcap-currency-widget {
        margin-right: 0 !important;
    }
}
.what-is-crypto .coinmarketcap-currency-widget > * {
    min-width: auto !important;
}
.what-is-crypto .coinmarketcap-currency-widget > * > * a {
    color: #000 !important;
    border-color: #000 !important;
}
.intro-live-page img {
    margin: 3vw auto auto;
    display: block;
}
@media screen and (min-width: 1200px) {
    .intro-live-page {
        background: linear-gradient(180deg, #fff 50%, hsla(0, 0%, 100%, 0)),
            url(../../../cdn.shopify.com/s/files/1/2974/4858/files/desktop-ledger-live-background_1920x.png) no-repeat center
                95%;
        background-size: contain;
    }
}
@media screen and (min-width: 992px) and (max-width: 1200px) {
    .intro-live-page {
        background: linear-gradient(180deg, #fff 50%, hsla(0, 0%, 100%, 0)),
            url(../../../cdn.shopify.com/s/files/1/2974/4858/files/desktop-ledger-live-background_x490.png) no-repeat center
                95%;
    }
    .intro-live-page img {
        max-width: 90%;
    }
}
@media screen and (max-width: 992px) {
    .intro-live-page img {
        max-width: 90%;
        margin-left: auto;
        margin-right: auto;
    }
}
@media screen and (min-width: 992px) {
    .cover {
        align-items: center;
    }
}
.iot i.icon {
    color: #ff9600 !important;
}
.vault i.icon {
    color: #27d0e2 !important;
}
.live i.icon {
    color: #6490f1 !important;
}
body #cookie-notice {
    position: fixed;
    bottom: 12px;
    left: 12px;
    z-index: 990;
    min-width: auto;
    width: 90%;
    max-width: 320px;
    background-color: rgba(67, 81, 92, 0.9) !important;
    border-radius: 4px;
    color: #fff;
    font-size: 0.75rem;
}
body #cookie-notice > * {
    padding: 16px;
    box-sizing: border-box;
    text-align: left;
}
body #cookie-notice .cn-buttons-container {
    display: flex;
    flex-flow: column nowrap;
}
body #cookie-notice .cn-buttons-container > * {
    order: 1;
    color: #fff;
    font-size: 0.75rem;
    line-height: 1.5;
    font-weight: 400;
    font-family: Open Sans, arial, sans-serif;
}
body #cookie-notice a {
    padding: 0;
    margin-left: 0 !important;
    text-decoration: underline;
    text-align: left;
    box-shadow: none;
    text-shadow: none;
    background: none;
    border: 0;
}
body #cookie-notice a:hover {
    background: inherit;
}
body #cookie-notice a#cn-accept-cookie {
    background: #fff;
    order: 3;
    text-align: center;
    color: #000;
    text-decoration: none;
    width: 70%;
    margin: 1vw auto 0 !important;
    padding: 7px;
}
@keyframes move-1 {
    0% {
        transform: translate3d(-2px, -6px, -9px);
    }
    25% {
        transform: translate3d(2px, 0, 10px);
    }
    75% {
        transform: translate3d(-3px, 3px, 5px);
    }
    to {
        transform: translate3d(-2px, -6px, -9px);
    }
}
@keyframes move-2 {
    0% {
        transform: translate3d(-3px, 3px, -3px);
    }
    25% {
        transform: translate3d(1px, 5px, -7px);
    }
    50% {
        transform: translateZ(0);
    }
    75% {
        transform: translate3d(-5px, -4px, 4px);
    }
    to {
        transform: translate3d(-3px, 3px, -3px);
    }
}
@keyframes move-3 {
    0% {
        transform: translateZ(0);
    }
    35% {
        transform: translate3d(5px, -4px, 8px);
    }
    65% {
        transform: translate3d(-8px, -7px, -15px);
    }
    to {
        transform: translateZ(0);
    }
}
@keyframes move-4 {
    0% {
        transform: translate3d(2px, 5px, -3px);
    }
    35% {
        transform: translateZ(0);
    }
    65% {
        transform: translate3d(-3px, -2px, -5px);
    }
    to {
        transform: translate3d(2px, 5px, -3px);
    }
}
.ico-hero {
    position: absolute;
    z-index: 20;
}
.ico-g {
    top: 35%;
    left: 100px;
    transform: rotate(-10deg);
    animation: move-2 4s linear infinite;
}
.ico-m {
    top: 15px;
    left: 85px;
    animation: move-1 3s ease infinite;
}
.ico-m-2 {
    bottom: 0;
    top: auto;
    left: 60px;
    animation: move-4 5s linear infinite;
}
.ico-w {
    top: auto;
    right: 39px;
    bottom: 32px;
    left: auto;
    animation: move-3 5s linear infinite;
}
.ico-w-2 {
    top: 70px;
    right: 10px;
    left: auto;
    animation: move-4 5s linear infinite;
}
.mouse-bg {
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    position: absolute;
    z-index: 20;
    display: none;
}
.mouse-bg.ico-g {
    top: 35%;
    left: 112px;
    transform: rotate(-7deg);
}
.mouse-bg.ico-m {
    top: 15px;
    left: 85px;
}
.mouse-bg.ico-m-2 {
    bottom: 0;
    top: auto;
    left: 60px;
}
.mouse-bg.ico-w {
    top: auto;
    right: 74px;
    bottom: 66px;
    left: auto;
}
.mouse-bg.ico-w-2 {
    top: 68px;
    right: 10px;
    left: auto;
}
.referral-page .hero-block {
    align-items: stretch !important;
}
@media screen and (max-width: 768px) {
    .referral-page .hero-block {
        flex-direction: column;
        align-items: stretch !important;
    }
    .referral-page .hero-block > :last-of-type {
        text-align: center !important;
        margin-top: 45px;
    }
}
.referral-page .hero-block .hero-illustration .fix-img {
    z-index: 12;
    position: relative;
}
.referral-page .hero-block .hero-illustration > div {
    width: 420px;
    text-align: center;
    position: relative;
    display: flex;
    height: 100%;
    justify-content: center;
    min-height: 420px;
    padding-top: 30px;
    margin: auto;
}
@media screen and (max-width: 690px) {
    .referral-page .hero-block .hero-illustration > div {
        display: none;
    }
}
.referral-page .hero-block .hero-illustration > div [class^="line"] {
    position: absolute;
    z-index: 5;
    width: 150px;
    height: 3px;
    border-top: 3px dashed #41ccb4;
}
.referral-page .hero-block .hero-illustration > div [class^="line"].line-1 {
    top: 150px;
    margin-left: -12%;
    transform: rotate(60deg);
}
.referral-page .hero-block .hero-illustration > div [class^="line"].line-2 {
    top: 155px;
    right: 61px;
    transform: rotate(-24deg);
}
.referral-page .hero-block .hero-illustration > div [class^="line"].line-3 {
    top: 287px;
    left: 111px;
    transform: rotate(-45deg);
}
.referral-page .hero-block .hero-illustration > div [class^="line"].line-4 {
    top: 272px;
    right: 101px;
    transform: rotate(35deg);
}
@media screen and (min-width: 691px) {
    .referral-page .hero-block .hero-illustration > img {
        display: none;
    }
}
.referral-page .terms-conditions {
    margin-bottom: 75px;
}
@media screen and (min-width: 860px) {
    .referral-page .terms-conditions {
        padding-top: 45px;
    }
}
@media screen and (max-width: 860px) {
    .referral-page .terms-conditions {
        margin-top: -30px;
    }
}
.referral-page .c-scrolling-zone > .scroll-content {
    margin-left: auto !important;
}
.referral-page .c-scrolling-zone > .fixed-area {
    margin-right: auto;
    margin-left: auto;
}
#the-people-grid {
    justify-content: center;
    flex-direction: row;
    flex-wrap: wrap;
}
#the-people-grid > * {
    margin-bottom: 3vw;
}
@media screen and (max-width: 992px) {
    #the-people-grid > * {
        min-width: 130px;
        margin-bottom: 5vw;
    }
}
#the-people-grid img {
    transition: all 0.2s;
    border: 1px solid #eee;
    border-radius: 4px;
    box-shadow: 0 0 15px 1px rgba(0, 0, 0, 0.15);
    max-width: 90px;
}
@media screen and (min-width: 992px) {
    #the-people-grid img {
        width: 80%;
        margin-bottom: 1vw;
    }
}
#the-people-grid img:hover {
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.15);
}
#the-people-grid .h4 {
    font-size: 1.1875rem;
    margin: 1vw 0 0;
}
#the-people-grid .h4 a:link,
#the-people-grid .h4 a:visited {
    color: #41ccb4;
}
#download-app {
    margin-top: 1vw;
    padding: 10px 15px 15px;
    line-height: 1.2;
    width: 205px;
    text-align: left;
    font-size: 1.1875rem;
    font-family: museo-sans, Open sans, arial, sans-serif;
    z-index: 25;
    position: relative;
    box-sizing: border-box;
    clear: both;
}
#download-app .caption {
    color: #fff !important;
    font-family: Open Sans, arial, sans-serif;
}
#download-app .fal {
    font-size: 0.875rem;
    margin-left: 12px;
    top: -10px;
}
.list-app {
    margin: 0 auto;
    width: 200px;
    display: none;
    box-sizing: border-box;
}
.list-app,
.list-app .bg {
    position: absolute;
    z-index: 15;
}
.list-app .bg {
    margin-top: -3px;
    padding: 15px 20px !important;
    width: 205px;
}
.list-app .bg a {
    display: block;
    margin: 15px 0;
    color: #fff;
    text-align: left;
    font-size: 1.1875rem;
    text-decoration: none;
}
.list-app .bg a i {
    margin-right: 15px;
}
@media screen and (max-width: 690px) {
    .list-app {
        background: #d8d8d8;
    }
}
.affiliates-page form {
    justify-content: center;
}
.affiliates-page form > * {
    max-width: 220px;
    margin: auto 1vw;
}
@media screen and (max-width: 768px) {
    .affiliates-page form > * {
        margin-top: 7px;
        margin-bottom: 7px;
    }
}
@media screen and (min-width: 768px) {
    .affiliates-page form > * select {
        min-width: 210px;
    }
}
@media screen and (max-width: 768px) {
    .affiliates-page .c-diagonal-bloc .bloc-item {
        text-align: center;
    }
}
.affiliates-page .c-diagonal-bloc .bloc-item .avatar {
    border-radius: 100%;
    width: 48px;
    display: inline-block;
    vertical-align: middle;
    margin-right: 1vw;
}
@media screen and (max-width: 768px) {
    .affiliates-page .c-diagonal-bloc .bloc-item .avatar {
        display: block;
        margin: 0 auto 12px;
    }
}
.affiliates-page .c-diagonal-bloc .bloc-item iframe {
    width: 100%;
    height: 100%;
    min-height: 160px;
}
@media screen and (min-width: 1200px) {
    .affiliates-page .c-diagonal-bloc .bloc-item iframe {
        width: 550px;
        height: 310px;
    }
}
@media screen and (min-width: 768px) {
    .text-in-col {
        column-count: 2;
        column-gap: 5vw;
    }
}
.text-in-col p:not(:last-of-type) {
    margin-bottom: 30px;
}
.how-to-buy-crypto .swiper-container-device {
    position: relative;
    padding-bottom: 46px;
    overflow: hidden;
}
.how-to-buy-crypto .swiper-container-device .swiper-wrapper {
    box-sizing: border-box;
}
.how-to-buy-crypto .swiper-container-device .swiper-wrapper .swiper-slide {
    min-height: 160px;
    max-width: 100%;
}
.how-to-buy-crypto .swiper-container-device .swiper-wrapper .swiper-slide img {
    max-width: 120px;
}
.how-to-buy-crypto .swiper-container-device .swiper-wrapper .swiper-slide > * {
    max-width: 85%;
    margin: auto;
    font-size: 11px;
    display: flex;
    align-items: center;
}
@media screen and (max-width: 690px) {
    .how-to-buy-crypto .swiper-container-device .swiper-wrapper .swiper-slide > * {
        flex-direction: column;
        max-width: 93%;
    }
}
.how-to-buy-crypto .swiper-container-device .swiper-wrapper .swiper-slide > * .ledger-product {
    color: #142533;
    display: block;
    margin-bottom: 1vw;
    line-height: 1.4;
    margin-top: 5vw;
}
@media screen and (min-width: 1200px) {
    .how-to-buy-crypto .swiper-container-device .swiper-wrapper .swiper-slide > * .ledger-product {
        font-size: 1.44rem;
        margin-top: 0;
    }
}
.how-to-buy-crypto .swiper-container-device .swiper-wrapper .swiper-slide > * p {
    padding-right: 12px;
}
.how-to-buy-crypto .swiper-container-device .swiper-wrapper .swiper-slide > * a {
    font-size: 0.875rem;
    margin: 1vw 0 0;
    padding: 0;
}
.how-to-buy-crypto .swiper-button-next:after,
.how-to-buy-crypto .swiper-button-prev:after {
    color: #999;
    font-family: Font Awesome\5 Pro;
    font-weight: 300;
    font-size: 28px;
    outline: none;
}
.how-to-buy-crypto .swiper-button-next {
    right: 0;
    text-align: right;
}
.how-to-buy-crypto .swiper-button-next:after {
    content: "\f105";
    outline: none;
}
.how-to-buy-crypto .swiper-button-prev {
    left: 0;
}
.how-to-buy-crypto .swiper-button-prev:after {
    content: "\f104";
    outline: none;
}
.how-to-buy-crypto .swiper-pagination-bullet-active {
    background-color: #142533;
}
@media screen and (max-width: 690px) {
    .how-to-buy-crypto .review-box > * {
        margin: auto;
        max-width: 75%;
    }
}
.how-to-buy-crypto .review-box .box-author {
    display: flex;
    margin-bottom: 2vw;
}
.how-to-buy-crypto .review-box .box-avatar {
    background: #c2efe7;
    width: 48px;
    height: 48px;
    border-radius: 100%;
    flex: none;
    color: #41ccb4;
    text-align: center;
    line-height: 48px;
    margin-right: 12px;
}
.how-to-buy-crypto .review-box .author {
    font-size: 1.1875rem;
    color: #142533;
}
.how-to-buy-crypto .review-box .fa-star,
.how-to-buy-crypto .review-box .icon.icon-star,
.how-to-buy-crypto .review-box .yotpo-icon-star {
    margin-bottom: 8px;
}
.how-to-buy-crypto .review-box .icon-user:before {
    font-size: 20px;
}
@media screen and (max-width: 690px) {
    .how-to-buy-crypto .swiper-container {
        padding-bottom: 50px;
    }
}
.how-to-buy-crypto .swiper-container .swiper-wrapper {
    flex-flow: row nowrap;
}
@media screen and (min-width: 690px) {
    .how-to-buy-crypto .swiper-container .swiper-wrapper {
        transition-duration: 0ms !important;
        transform: translateZ(0) !important;
    }
}
.how-to-buy-crypto .swiper-container .swiper-slide {
    justify-content: center;
}
@media screen and (min-width: 690px) {
    .how-to-buy-crypto .swiper-container .swiper-slide {
        flex: none;
        width: 28% !important;
    }
}
@media screen and (max-width: 690px) {
    .how-to-buy-crypto .swiper-container .swiper-slide {
        width: 100%;
        min-width: 100%;
    }
}
.how-to-buy-crypto .swiper-container .swiper-button-next,
.how-to-buy-crypto .swiper-container .swiper-button-prev,
.how-to-buy-crypto .swiper-container .swiper-pagination {
    display: none;
}
@media screen and (max-width: 690px) {
    .how-to-buy-crypto .swiper-container .swiper-button-next,
    .how-to-buy-crypto .swiper-container .swiper-button-prev,
    .how-to-buy-crypto .swiper-container .swiper-pagination {
        display: block;
    }
}
.how-to-buy-crypto .swiper-container + p > .read-more {
    display: block;
}
@media screen and (min-width: 992px) {
    .how-to-buy-crypto .swiper-container + p > .read-more {
        text-align: right;
    }
}
.how-to-buy-crypto .rendered-form {
    margin-top: 2vw;
}
.how-to-buy-crypto .rendered-form > * {
    margin: 0 0 2vw;
}
@media screen and (max-width: 768px) {
    .how-to-buy-crypto .rendered-form > * {
        margin-top: 7vw;
    }
}
.how-to-buy-crypto .rendered-form label {
    font-size: 11px;
    color: #565656;
    display: block;
}
.how-to-buy-crypto .rendered-form input[type="number"],
.how-to-buy-crypto .rendered-form select {
    border-radius: 0;
    border: 0;
    border-bottom: 1px solid #dcdcdc;
    padding: 3px 0 !important;
    background-color: transparent !important;
    color: #142533;
    font-size: 23px;
}
.how-to-buy-crypto .rendered-form select {
    width: 100%;
    height: auto;
}
.how-to-buy-crypto .rendered-form .field-amount {
    align-items: flex-end;
    display: flex;
    justify-content: space-between;
}
@media screen and (max-width: 768px) {
    .how-to-buy-crypto .rendered-form .field-amount {
        flex-direction: column;
        align-items: stretch;
    }
}
.how-to-buy-crypto .rendered-form .field-amount > * {
    flex: none;
    max-width: 51%;
}
@media screen and (max-width: 768px) {
    .how-to-buy-crypto .rendered-form .field-amount > * {
        max-width: 100%;
        min-width: 100%;
        margin-bottom: 5vw;
    }
}
.how-to-buy-crypto .rendered-form .field-amount input {
    max-width: 90% !important;
}
@media screen and (max-width: 768px) {
    .how-to-buy-crypto .rendered-form .field-amount input {
        max-width: 100% !important;
        width: 100% !important;
    }
}
.how-to-buy-crypto .rendered-form .button {
    padding-top: 0;
    padding-bottom: 0;
    max-width: max-content;
    font-size: 14px;
}
.how-to-buy-crypto .rendered-form-results {
    margin-top: 45px;
    color: #142533;
    font-size: 1rem;
}
@media screen and (max-width: 768px) {
    .how-to-buy-crypto .rendered-form-results {
        margin-top: 7vw;
    }
}
.how-to-buy-crypto .rendered-form-results p {
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
}
.how-to-buy-crypto .rendered-form-results p > * {
    flex: none;
    align-items: center;
}
.how-to-buy-crypto .rendered-form-results p img {
    opacity: 0.4;
    max-height: 32px;
    filter: brightness(0);
}
@media screen and (max-width: 767px) {
    .how-to-buy-crypto .faq {
        padding: 30px;
    }
}
.getting-started .intro .title {
    margin-bottom: 1vw;
}
.getting-started .get-started-steps .step-item {
    border-radius: 4px;
    width: 49%;
    flex: none;
    margin-bottom: 2vw;
    background: #f3f3f3;
    padding: 45px;
    max-width: 550px;
}
@media screen and (max-width: 992px) {
    .getting-started .get-started-steps .step-item {
        padding: 30px;
    }
}
@media screen and (max-width: 767px) {
    .getting-started .get-started-steps .step-item {
        min-width: 100%;
        max-width: 100%;
        margin-bottom: 7vw;
    }
}
.getting-started .get-started-steps .step-item:last-child {
    min-width: 100%;
    margin-bottom: inherit;
}
.getting-started .get-started-steps .step-item .step-number {
    margin-bottom: 1vw;
}
.getting-started .get-started-steps .step-item .step-number span {
    color: #999;
}
@media screen and (max-width: 1200px) {
    .getting-started .get-started-steps .step-item.flexbox {
        flex-direction: column;
    }
}
.getting-started .get-started-steps .step-item.flexbox > * {
    max-width: 580px;
}
@media screen and (max-width: 1200px) {
    .getting-started .get-started-steps .step-item.flexbox > * {
        margin-bottom: 5vw;
        flex: 1;
        max-width: 100% !important;
        width: 100% !important;
    }
}
.getting-started .get-started-steps .step-item .level-2 {
    padding: 15px;
    display: flex;
}
.getting-started .get-started-steps .step-item .level-2 .is-warning {
    padding: 3px 15px 0 0;
    flex: none;
}
.getting-started .badge {
    text-transform: none;
}
.getting-started .tab-selection input {
    display: none;
}
.getting-started .tab-selection:hover > input ~ label,
.getting-started .tab-selection input:checked ~ label {
    background-color: #142533;
    color: #fff;
    opacity: 1;
}
@media screen and (max-width: 767px) {
    .getting-started .list-exchange {
        flex-direction: column;
    }
    .getting-started .list-exchange .step-item.flexbox iframe,
    .getting-started .list-exchange > * {
        width: 100% !important;
        max-width: 100% !important;
    }
}
@media (-ms-high-contrast: none), screen and (-ms-high-contrast: active) {
    .getting-started .list-exchange {
        flex: none;
        width: 580px;
        max-width: 50% !important;
    }
}
.getting-started .list-tab-exchange {
    flex: none;
    padding-right: 1vw;
    flex-direction: column;
    justify-content: center;
}
@media screen and (max-width: 1200px) {
    .getting-started .list-tab-exchange {
        width: 30%;
    }
}
@media screen and (max-width: 767px) {
    .getting-started .list-tab-exchange {
        flex-direction: row;
        margin: 3vw 0;
        flex-wrap: wrap;
    }
}
.getting-started .list-tab-exchange > * {
    flex: none;
    cursor: pointer;
    text-align: center;
}
@media screen and (max-width: 767px) {
    .getting-started .list-tab-exchange > * {
        margin: 2vw 3vw;
        flex-shrink: 2;
        flex-grow: 2;
    }
}
.getting-started .list-tab-exchange > * label {
    filter: grayscale(100%);
    opacity: 0.5;
    padding: 7px 10px 5px;
    width: 100%;
}
.getting-started .list-tab-exchange > * label img {
    max-height: 13px;
}
.getting-started .list-tab-exchange > * input:checked ~ label,
.getting-started .list-tab-exchange > :hover > input ~ label {
    opacity: 1;
}
.getting-started .list-tab-exchange > * input:checked ~ label img,
.getting-started .list-tab-exchange > :hover > input ~ label img {
    filter: grayscale(0) invert(200%) contrast(1);
}
.staking-coin .cover {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: calc(min(8vw, 45px)) 25px;
}
@media screen and (min-width: 993px) {
    .staking-coin .cover {
        padding: calc(min(5vw, 75px)) 0 calc(min(5vw, 75px)) calc(min(5vw, 75px));
    }
}
@media screen and (max-width: 992px) {
    .staking-coin .cover {
        flex-direction: column;
    }
    .staking-coin .cover > * {
        width: 100%;
        max-width: 100%;
        margin: 0 0 30px;
    }
}
@media screen and (min-width: 993px) {
    .staking-coin .cover > :first-of-type {
        margin-right: 5%;
        max-width: 530px;
        width: 50%;
    }
}
.staking-coin .cover .illustration {
    margin: 0;
    width: 45%;
}
@media screen and (max-width: 992px) {
    .staking-coin .cover .illustration {
        width: 100%;
        text-align: right;
    }
    .staking-coin .cover .illustration img {
        margin-right: -25px;
    }
}
.staking-coin .staking-block-cols .title {
    margin-bottom: 15px;
}
.staking-coin .staking-block-cols .title:not(:first-of-type) {
    margin-top: 45px;
}
@media screen and (max-width: 690px) {
    .staking-coin .staking-block-cols .title {
        margin-bottom: 3vw;
    }
}
@media screen and (max-width: 690px) {
    .staking-coin .different-ways .flexbox > :nth-of-type(2) {
        margin-top: 13vw;
    }
    .staking-coin .different-ways .badge {
        font-size: 11px;
        margin-bottom: 3vw !important;
    }
}
.staking-coin .earn-section .bloc-text {
    min-width: 26% !important;
}
.staking-coin .earn-section .bloc-text + .is-hidden-mobile {
    max-width: 40px;
    margin: 51px 0 0 !important;
    font-size: 28px;
    min-width: auto;
    color: #d8d8d8;
}
@media screen and (min-width: 769px) {
    .staking-coin .last-update .b-title-master {
        max-width: 532px;
    }
}
@media screen and (min-width: 769px) {
    .staking-coin .last-update .illustration {
        max-width: 426px;
    }
}
@media (-ms-high-contrast: none), screen and (-ms-high-contrast: active) {
    .staking-coin .last-update > * {
        flex: none;
    }
}
.swap-page .introduction {
    margin-bottom: 120px;
}
@media screen and (max-width: 768px) {
    .swap-page .introduction {
        margin-bottom: 45px;
    }
}
.swap-page .safety-section .bloc-text.bg {
    padding: 30px;
}
@media screen and (max-width: 768px) {
    .swap-page .safety-section .bloc-text.bg {
        padding: 30px 15px;
    }
}
@media screen and (max-width: 690px) {
    .partner-page .hero-block {
        text-align: center;
    }
}
.partner-page .hero-block .title {
    font-size: 30px;
    position: relative;
    z-index: 5;
    margin-bottom: 30px;
}
@media screen and (max-width: 890px) {
    .partner-page .hero-block .title {
        font-size: 38px;
    }
}
@media screen and (min-width: 891px) {
    .partner-page .hero-block .title {
        font-size: 44px;
        margin-bottom: 0;
    }
}
.partner-page .hero-block img {
    position: relative;
    z-index: 1;
    flex: none;
}
@media screen and (min-width: 691px) {
    .partner-page .hero-block img {
        margin-left: -165px;
    }
}
@media screen and (min-width: 691px) and (max-width: 1200px) {
    .partner-page .hero-block img {
        max-width: 65%;
    }
}
.partner-page .col-2 > .block-col-2 {
    padding: 75px 30px;
    max-width: 532px;
    min-width: 49%;
    margin: 0;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
@media screen and (max-width: 690px) {
    .partner-page .col-2 > .block-col-2 {
        margin-bottom: 30px;
        max-width: 100%;
    }
}
.partner-page .col-2 > .block-col-2 > * {
    max-width: 100%;
}
.partner-page .col-2 > .block-col-2 ul {
    margin-left: auto;
    margin-right: auto;
    font-weight: 600;
    color: #142533;
    font-size: 1.1875rem;
}
.partner-page .col-2 > .block-col-2 ul li {
    list-style: none;
    margin-bottom: 15px;
    display: flex;
    align-items: baseline;
}
.partner-page .col-2 > .block-col-2 ul li i {
    margin-right: 10px;
}
.partner-page .bloc-item > :not(.content) {
    min-width: 51%;
}
.partner-page .bloc-item .content > * {
    margin-left: 0;
}
.lend-page .steps-section > * {
    display: flex;
    flex-direction: column;
}
.lend-page .steps-section > :not(:last-of-type) {
    padding-bottom: 0;
}
.lend-page .steps-section > :last-of-type {
    justify-content: center;
}
.lend-page .steps-section > * img {
    display: block;
    margin: auto auto 0;
}
.lend-page .lend-reinssurance-section .col {
    justify-content: space-around;
}
.lend-page .lend-reinssurance-section .col > * {
    flex: initial;
    min-width: auto;
}
@media screen and (min-width: 690px) {
    .lend-page .lend-reinssurance-section .col > * {
        max-width: 305px;
        min-width: auto;
        width: 30%;
    }
}
@media screen and (max-width: 690px) {
    .lend-page .lend-other-crypto .grid-items {
        align-items: center;
    }
    .lend-page .lend-other-crypto .grid-items > * {
        width: 100%;
        margin: 10px auto;
    }
}
.phishing-bloc-hero .buttons-pack {
    justify-content: flex-start;
}
.phishing-bloc-hero .buttons-pack > * {
    flex: none;
    margin: 3px 0 !important;
}
.phishing-bloc-item {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}
@media screen and (max-width: 767px) {
    .phishing-bloc-item {
        flex-direction: column;
        align-items: flex-start;
    }
}
.phishing-bloc-item > * {
    width: 100%;
    display: flex;
    padding: 30px;
    align-items: center;
    margin-bottom: 15px;
}
@media screen and (min-width: 768px) and (max-width: 1200px) {
    .phishing-bloc-item > * {
        flex-direction: column;
        align-items: flex-start;
    }
}
@media screen and (min-width: 768px) {
    .phishing-bloc-item > * {
        width: 32%;
        max-width: 375px;
        margin-bottom: 0;
    }
}
.phishing-bloc-item > * .read-more {
    font-size: 0.875rem;
}
.phishing-bloc-item img {
    margin-right: 30px;
    max-width: 100px;
}
@media screen and (min-width: 768px) and (max-width: 1200px) {
    .phishing-bloc-item img {
        margin-bottom: 30px;
        margin-right: 0;
    }
}
@media screen and (max-width: 768px) {
    .phishing-bloc-item img {
        max-width: 65px;
        margin-right: 15px;
    }
}
.phishing-bloc-news .bloc-item > :first-of-type {
    min-width: 55%;
    display: flex;
    align-items: flex-start;
    flex-wrap: wrap;
    justify-content: center;
}
.phishing-bloc-news .bloc-item > :first-of-type img {
    margin: 0 5px 5px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
